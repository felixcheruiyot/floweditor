// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CaseList render should render empty list 1`] = `
<CaseList
  cases={
    Array [
      Object {
        "categoryName": "",
        "kase": Object {
          "arguments": Array [
            "",
          ],
          "category_uuid": null,
          "type": "has_any_word",
          "uuid": "1dce2b34-9aab-4e20-81c4-3f0408dcb671",
        },
        "uuid": "1dce2b34-9aab-4e20-81c4-3f0408dcb671",
        "valid": true,
      },
    ]
  }
>
  <div
    className="caseList"
  >
    <DragDropContext
      onDragEnd={[Function]}
    >
      <Connect(Droppable)
        droppableId="droppable"
      >
        <Droppable
          direction="vertical"
          dispatch={[Function]}
          droppableId="droppable"
          ignoreContainerClipping={false}
          isDraggingOver={false}
          isDropDisabled={false}
          placeholder={null}
          type="DEFAULT"
        >
          <Connect(DroppableDimensionPublisher)
            direction="vertical"
            droppableId="droppable"
            ignoreContainerClipping={false}
            isDropDisabled={false}
            targetRef={
              <div>
                <div
                  data-spec="case-draggable"
                >
                  <div
                    style="user-select: none; outline: none; pointer-events: auto;"
                  >
                    <div
                      class="ele group"
                    >
                      <div
                        class="kase"
                      >
                        <span
                          class="fe-chevrons-expand dndIcon"
                        />
                        <div
                          class="choice select-medium"
                        >
                          <div
                            class="css-10nd86i select-base"
                          >
                            <div
                              class="css-1vpc3wb"
                            >
                              <div
                                class="css-c2yhe2"
                              >
                                <div
                                  class="css-16k2dzr"
                                >
                                  has any of the words
                                </div>
                                <input
                                  class="css-14uuagi"
                                  id="react-select-2-input"
                                  readonly=""
                                  tabindex="0"
                                  value=""
                                />
                              </div>
                              <div
                                class="css-1l76mts"
                              >
                                <span
                                  class="css-d8oujb"
                                />
                                <div
                                  aria-hidden="true"
                                  class="css-1ep9fjw"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="css-19bqh2r"
                                    focusable="false"
                                    height="20"
                                    viewBox="0 0 20 20"
                                    width="20"
                                  >
                                    <path
                                      d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                    />
                                  </svg>
                                </div>
                              </div>
                            </div>
                            <input
                              name="operator"
                              type="hidden"
                              value="has_any_word"
                            />
                          </div>
                        </div>
                        <div
                          class="singleOperand"
                        >
                          <div
                            class="ele"
                          >
                            <div
                              class="wrapper"
                            >
                              <input
                                class="textinput"
                                data-spec="input"
                                type="text"
                                value=""
                              />
                              <div
                                class="completionContainer hidden"
                                data-spec="completion-options"
                                style="top: 0px; left: 0px;"
                              >
                                <ul
                                  class="option_list"
                                  data-spec="completion-list"
                                />
                                <div
                                  class="help"
                                  data-spec="completion-help"
                                >
                                  Tab to complete, enter to select
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="categorizeAs"
                        >
                          categorize as
                        </div>
                        <div
                          class="category"
                        >
                          <div
                            class="ele"
                          >
                            <div
                              class="wrapper"
                            >
                              <input
                                class="textinput"
                                data-spec="input"
                                type="text"
                                value=""
                              />
                              <div
                                class="completionContainer hidden"
                                data-spec="completion-options"
                                style="top: 0px; left: 0px;"
                              >
                                <ul
                                  class="option_list"
                                  data-spec="completion-list"
                                />
                                <div
                                  class="help"
                                  data-spec="completion-help"
                                >
                                  Tab to complete, enter to select
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <span
                          class="fe-x removeIcon"
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            }
            type="DEFAULT"
          >
            <DroppableDimensionPublisher
              direction="vertical"
              droppableId="droppable"
              ignoreContainerClipping={false}
              isDropDisabled={false}
              publish={[Function]}
              shouldPublish={false}
              targetRef={
                <div>
                  <div
                    data-spec="case-draggable"
                  >
                    <div
                      style="user-select: none; outline: none; pointer-events: auto;"
                    >
                      <div
                        class="ele group"
                      >
                        <div
                          class="kase"
                        >
                          <span
                            class="fe-chevrons-expand dndIcon"
                          />
                          <div
                            class="choice select-medium"
                          >
                            <div
                              class="css-10nd86i select-base"
                            >
                              <div
                                class="css-1vpc3wb"
                              >
                                <div
                                  class="css-c2yhe2"
                                >
                                  <div
                                    class="css-16k2dzr"
                                  >
                                    has any of the words
                                  </div>
                                  <input
                                    class="css-14uuagi"
                                    id="react-select-2-input"
                                    readonly=""
                                    tabindex="0"
                                    value=""
                                  />
                                </div>
                                <div
                                  class="css-1l76mts"
                                >
                                  <span
                                    class="css-d8oujb"
                                  />
                                  <div
                                    aria-hidden="true"
                                    class="css-1ep9fjw"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="css-19bqh2r"
                                      focusable="false"
                                      height="20"
                                      viewBox="0 0 20 20"
                                      width="20"
                                    >
                                      <path
                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                              <input
                                name="operator"
                                type="hidden"
                                value="has_any_word"
                              />
                            </div>
                          </div>
                          <div
                            class="singleOperand"
                          >
                            <div
                              class="ele"
                            >
                              <div
                                class="wrapper"
                              >
                                <input
                                  class="textinput"
                                  data-spec="input"
                                  type="text"
                                  value=""
                                />
                                <div
                                  class="completionContainer hidden"
                                  data-spec="completion-options"
                                  style="top: 0px; left: 0px;"
                                >
                                  <ul
                                    class="option_list"
                                    data-spec="completion-list"
                                  />
                                  <div
                                    class="help"
                                    data-spec="completion-help"
                                  >
                                    Tab to complete, enter to select
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="categorizeAs"
                          >
                            categorize as
                          </div>
                          <div
                            class="category"
                          >
                            <div
                              class="ele"
                            >
                              <div
                                class="wrapper"
                              >
                                <input
                                  class="textinput"
                                  data-spec="input"
                                  type="text"
                                  value=""
                                />
                                <div
                                  class="completionContainer hidden"
                                  data-spec="completion-options"
                                  style="top: 0px; left: 0px;"
                                >
                                  <ul
                                    class="option_list"
                                    data-spec="completion-list"
                                  />
                                  <div
                                    class="help"
                                    data-spec="completion-help"
                                  >
                                    Tab to complete, enter to select
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <span
                            class="fe-x removeIcon"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              }
              type="DEFAULT"
              updateIsEnabled={[Function]}
              updateScroll={[Function]}
            >
              <div
                style={null}
              >
                <Connect(Draggable)
                  draggableId="1dce2b34-9aab-4e20-81c4-3f0408dcb671"
                  isDragDisabled={true}
                  key="1dce2b34-9aab-4e20-81c4-3f0408dcb671"
                >
                  <Draggable
                    canAnimate={false}
                    canLift={true}
                    cancel={[Function]}
                    crossAxisMoveBackward={[Function]}
                    crossAxisMoveForward={[Function]}
                    dimension={null}
                    direction={null}
                    disableInteractiveElementBlocking={false}
                    draggableId="1dce2b34-9aab-4e20-81c4-3f0408dcb671"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    isDragDisabled={true}
                    isDragging={false}
                    isDropAnimating={false}
                    lift={[Function]}
                    move={[Function]}
                    moveBackward={[Function]}
                    moveByWindowScroll={[Function]}
                    moveForward={[Function]}
                    offset={
                      Object {
                        "x": 0,
                        "y": 0,
                      }
                    }
                    type="DEFAULT"
                  >
                    <Connect(DraggableDimensionPublisher)
                      draggableId="1dce2b34-9aab-4e20-81c4-3f0408dcb671"
                      droppableId="droppable"
                      targetRef={
                        <div
                          style="user-select: none; outline: none; pointer-events: auto;"
                        >
                          <div
                            class="ele group"
                          >
                            <div
                              class="kase"
                            >
                              <span
                                class="fe-chevrons-expand dndIcon"
                              />
                              <div
                                class="choice select-medium"
                              >
                                <div
                                  class="css-10nd86i select-base"
                                >
                                  <div
                                    class="css-1vpc3wb"
                                  >
                                    <div
                                      class="css-c2yhe2"
                                    >
                                      <div
                                        class="css-16k2dzr"
                                      >
                                        has any of the words
                                      </div>
                                      <input
                                        class="css-14uuagi"
                                        id="react-select-2-input"
                                        readonly=""
                                        tabindex="0"
                                        value=""
                                      />
                                    </div>
                                    <div
                                      class="css-1l76mts"
                                    >
                                      <span
                                        class="css-d8oujb"
                                      />
                                      <div
                                        aria-hidden="true"
                                        class="css-1ep9fjw"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="css-19bqh2r"
                                          focusable="false"
                                          height="20"
                                          viewBox="0 0 20 20"
                                          width="20"
                                        >
                                          <path
                                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  </div>
                                  <input
                                    name="operator"
                                    type="hidden"
                                    value="has_any_word"
                                  />
                                </div>
                              </div>
                              <div
                                class="singleOperand"
                              >
                                <div
                                  class="ele"
                                >
                                  <div
                                    class="wrapper"
                                  >
                                    <input
                                      class="textinput"
                                      data-spec="input"
                                      type="text"
                                      value=""
                                    />
                                    <div
                                      class="completionContainer hidden"
                                      data-spec="completion-options"
                                      style="top: 0px; left: 0px;"
                                    >
                                      <ul
                                        class="option_list"
                                        data-spec="completion-list"
                                      />
                                      <div
                                        class="help"
                                        data-spec="completion-help"
                                      >
                                        Tab to complete, enter to select
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <div
                                class="categorizeAs"
                              >
                                categorize as
                              </div>
                              <div
                                class="category"
                              >
                                <div
                                  class="ele"
                                >
                                  <div
                                    class="wrapper"
                                  >
                                    <input
                                      class="textinput"
                                      data-spec="input"
                                      type="text"
                                      value=""
                                    />
                                    <div
                                      class="completionContainer hidden"
                                      data-spec="completion-options"
                                      style="top: 0px; left: 0px;"
                                    >
                                      <ul
                                        class="option_list"
                                        data-spec="completion-list"
                                      />
                                      <div
                                        class="help"
                                        data-spec="completion-help"
                                      >
                                        Tab to complete, enter to select
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <span
                                class="fe-x removeIcon"
                              />
                            </div>
                          </div>
                        </div>
                      }
                      type="DEFAULT"
                    >
                      <DraggableDimensionPublisher
                        draggableId="1dce2b34-9aab-4e20-81c4-3f0408dcb671"
                        droppableId="droppable"
                        publish={[Function]}
                        shouldPublish={false}
                        targetRef={
                          <div
                            style="user-select: none; outline: none; pointer-events: auto;"
                          >
                            <div
                              class="ele group"
                            >
                              <div
                                class="kase"
                              >
                                <span
                                  class="fe-chevrons-expand dndIcon"
                                />
                                <div
                                  class="choice select-medium"
                                >
                                  <div
                                    class="css-10nd86i select-base"
                                  >
                                    <div
                                      class="css-1vpc3wb"
                                    >
                                      <div
                                        class="css-c2yhe2"
                                      >
                                        <div
                                          class="css-16k2dzr"
                                        >
                                          has any of the words
                                        </div>
                                        <input
                                          class="css-14uuagi"
                                          id="react-select-2-input"
                                          readonly=""
                                          tabindex="0"
                                          value=""
                                        />
                                      </div>
                                      <div
                                        class="css-1l76mts"
                                      >
                                        <span
                                          class="css-d8oujb"
                                        />
                                        <div
                                          aria-hidden="true"
                                          class="css-1ep9fjw"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="css-19bqh2r"
                                            focusable="false"
                                            height="20"
                                            viewBox="0 0 20 20"
                                            width="20"
                                          >
                                            <path
                                              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                            />
                                          </svg>
                                        </div>
                                      </div>
                                    </div>
                                    <input
                                      name="operator"
                                      type="hidden"
                                      value="has_any_word"
                                    />
                                  </div>
                                </div>
                                <div
                                  class="singleOperand"
                                >
                                  <div
                                    class="ele"
                                  >
                                    <div
                                      class="wrapper"
                                    >
                                      <input
                                        class="textinput"
                                        data-spec="input"
                                        type="text"
                                        value=""
                                      />
                                      <div
                                        class="completionContainer hidden"
                                        data-spec="completion-options"
                                        style="top: 0px; left: 0px;"
                                      >
                                        <ul
                                          class="option_list"
                                          data-spec="completion-list"
                                        />
                                        <div
                                          class="help"
                                          data-spec="completion-help"
                                        >
                                          Tab to complete, enter to select
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  class="categorizeAs"
                                >
                                  categorize as
                                </div>
                                <div
                                  class="category"
                                >
                                  <div
                                    class="ele"
                                  >
                                    <div
                                      class="wrapper"
                                    >
                                      <input
                                        class="textinput"
                                        data-spec="input"
                                        type="text"
                                        value=""
                                      />
                                      <div
                                        class="completionContainer hidden"
                                        data-spec="completion-options"
                                        style="top: 0px; left: 0px;"
                                      >
                                        <ul
                                          class="option_list"
                                          data-spec="completion-list"
                                        />
                                        <div
                                          class="help"
                                          data-spec="completion-help"
                                        >
                                          Tab to complete, enter to select
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <span
                                  class="fe-x removeIcon"
                                />
                              </div>
                            </div>
                          </div>
                        }
                        type="DEFAULT"
                      >
                        <Movable
                          destination={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          onMoveEnd={[Function]}
                          speed="INSTANT"
                        >
                          <Motion
                            defaultStyle={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            onRest={[Function]}
                            style={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                          >
                            <DragHandle
                              callbacks={
                                Object {
                                  "onCancel": [Function],
                                  "onCrossAxisMoveBackward": [Function],
                                  "onCrossAxisMoveForward": [Function],
                                  "onDrop": [Function],
                                  "onLift": [Function],
                                  "onMove": [Function],
                                  "onMoveBackward": [Function],
                                  "onMoveForward": [Function],
                                  "onWindowScroll": [Function],
                                }
                              }
                              canDragInteractiveElements={false}
                              canLift={true}
                              direction={null}
                              getDraggableRef={[Function]}
                              isDragging={false}
                              isEnabled={false}
                            >
                              <div
                                data-spec="case-draggable"
                              >
                                <div
                                  style={
                                    Object {
                                      "WebkitTapHighlightColor": "rgba(0,0,0,0)",
                                      "WebkitTouchCallout": "none",
                                      "outline": "none",
                                      "pointerEvents": "auto",
                                      "touchAction": "manipulation",
                                      "transform": null,
                                      "transition": null,
                                      "userSelect": "none",
                                    }
                                  }
                                >
                                  <CaseElement
                                    categoryName=""
                                    kase={
                                      Object {
                                        "arguments": Array [
                                          "",
                                        ],
                                        "category_uuid": null,
                                        "type": "has_any_word",
                                        "uuid": "1dce2b34-9aab-4e20-81c4-3f0408dcb671",
                                      }
                                    }
                                    key="1dce2b34-9aab-4e20-81c4-3f0408dcb671"
                                    onChange={[Function]}
                                    onRemove={[Function]}
                                    uuid="1dce2b34-9aab-4e20-81c4-3f0408dcb671"
                                    valid={true}
                                  >
                                    <FormElement
                                      __className="group"
                                      data-spec="case-form"
                                      kaseError={false}
                                    >
                                      <div
                                        className="ele group"
                                      >
                                        <div
                                          className="kase"
                                        >
                                          <span
                                            className="fe-chevrons-expand dndIcon"
                                          />
                                          <div
                                            className="choice select-medium"
                                          >
                                            <StateManager
                                              className="select-base"
                                              data-spec="operator-list"
                                              defaultInputValue=""
                                              defaultMenuIsOpen={false}
                                              defaultValue={null}
                                              getOptionLabel={[Function]}
                                              getOptionValue={[Function]}
                                              isClearable={false}
                                              isSearchable={false}
                                              menuPlacement="auto"
                                              name="operator"
                                              onChange={[Function]}
                                              options={
                                                Array [
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_beginning",
                                                    "verboseName": "starts with",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Number",
                                                    "type": "has_number",
                                                    "verboseName": "has a number",
                                                  },
                                                  Object {
                                                    "additionalArguments": 2,
                                                    "type": "has_number_between",
                                                    "verboseName": "has a number between",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_lt",
                                                    "verboseName": "has a number below",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_lte",
                                                    "verboseName": "has a number at or below",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_eq",
                                                    "verboseName": "has a number equal to",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_gte",
                                                    "verboseName": "has a number at or above",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_gt",
                                                    "verboseName": "has a number above",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Phone",
                                                    "type": "has_phone",
                                                    "verboseName": "has a phone number",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Not Empty",
                                                    "type": "has_value",
                                                    "verboseName": "is not empty",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Attachment",
                                                    "initialArgument": "@input.attachments",
                                                    "type": "has_attachment",
                                                    "verboseName": "has an attachment",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_pattern",
                                                    "verboseName": "matches regex",
                                                  },
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "control": [Function],
                                                  "indicatorsContainer": [Function],
                                                  "input": [Function],
                                                  "menuList": [Function],
                                                  "option": [Function],
                                                  "singleValue": [Function],
                                                  "valueContainer": [Function],
                                                }
                                              }
                                              value={
                                                Object {
                                                  "additionalArguments": 1,
                                                  "type": "has_any_word",
                                                  "verboseName": "has any of the words",
                                                  "visibility": Array [
                                                    "messaging",
                                                    "messaging_offline",
                                                  ],
                                                }
                                              }
                                            >
                                              <Select
                                                backspaceRemovesValue={true}
                                                blurInputOnSelect={true}
                                                captureMenuScroll={false}
                                                className="select-base"
                                                closeMenuOnScroll={false}
                                                closeMenuOnSelect={true}
                                                components={Object {}}
                                                controlShouldRenderValue={true}
                                                data-spec="operator-list"
                                                defaultInputValue=""
                                                defaultMenuIsOpen={false}
                                                defaultValue={null}
                                                escapeClearsValue={false}
                                                filterOption={[Function]}
                                                formatGroupLabel={[Function]}
                                                getOptionLabel={[Function]}
                                                getOptionValue={[Function]}
                                                inputValue=""
                                                isClearable={false}
                                                isDisabled={false}
                                                isLoading={false}
                                                isMulti={false}
                                                isOptionDisabled={[Function]}
                                                isRtl={false}
                                                isSearchable={false}
                                                loadingMessage={[Function]}
                                                maxMenuHeight={300}
                                                menuIsOpen={false}
                                                menuPlacement="auto"
                                                menuPosition="absolute"
                                                menuShouldBlockScroll={false}
                                                menuShouldScrollIntoView={true}
                                                minMenuHeight={140}
                                                name="operator"
                                                noOptionsMessage={[Function]}
                                                onChange={[Function]}
                                                onInputChange={[Function]}
                                                onMenuClose={[Function]}
                                                onMenuOpen={[Function]}
                                                openMenuOnClick={true}
                                                openMenuOnFocus={false}
                                                options={
                                                  Array [
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_beginning",
                                                      "verboseName": "starts with",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Number",
                                                      "type": "has_number",
                                                      "verboseName": "has a number",
                                                    },
                                                    Object {
                                                      "additionalArguments": 2,
                                                      "type": "has_number_between",
                                                      "verboseName": "has a number between",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_lt",
                                                      "verboseName": "has a number below",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_lte",
                                                      "verboseName": "has a number at or below",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_eq",
                                                      "verboseName": "has a number equal to",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_gte",
                                                      "verboseName": "has a number at or above",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_gt",
                                                      "verboseName": "has a number above",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Phone",
                                                      "type": "has_phone",
                                                      "verboseName": "has a phone number",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Not Empty",
                                                      "type": "has_value",
                                                      "verboseName": "is not empty",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Attachment",
                                                      "initialArgument": "@input.attachments",
                                                      "type": "has_attachment",
                                                      "verboseName": "has an attachment",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_pattern",
                                                      "verboseName": "matches regex",
                                                    },
                                                  ]
                                                }
                                                pageSize={5}
                                                placeholder="Select..."
                                                screenReaderStatus={[Function]}
                                                styles={
                                                  Object {
                                                    "control": [Function],
                                                    "indicatorsContainer": [Function],
                                                    "input": [Function],
                                                    "menuList": [Function],
                                                    "option": [Function],
                                                    "singleValue": [Function],
                                                    "valueContainer": [Function],
                                                  }
                                                }
                                                tabIndex="0"
                                                tabSelectsValue={true}
                                                value={
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_any_word",
                                                    "verboseName": "has any of the words",
                                                    "visibility": Array [
                                                      "messaging",
                                                      "messaging_offline",
                                                    ],
                                                  }
                                                }
                                              >
                                                <SelectContainer
                                                  className="select-base"
                                                  clearValue={[Function]}
                                                  cx={[Function]}
                                                  getStyles={[Function]}
                                                  getValue={[Function]}
                                                  hasValue={true}
                                                  innerProps={
                                                    Object {
                                                      "id": undefined,
                                                      "onKeyDown": [Function],
                                                    }
                                                  }
                                                  isDisabled={false}
                                                  isFocused={false}
                                                  isMulti={false}
                                                  isRtl={false}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_beginning",
                                                        "verboseName": "starts with",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Number",
                                                        "type": "has_number",
                                                        "verboseName": "has a number",
                                                      },
                                                      Object {
                                                        "additionalArguments": 2,
                                                        "type": "has_number_between",
                                                        "verboseName": "has a number between",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_lt",
                                                        "verboseName": "has a number below",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_lte",
                                                        "verboseName": "has a number at or below",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_eq",
                                                        "verboseName": "has a number equal to",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_gte",
                                                        "verboseName": "has a number at or above",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_gt",
                                                        "verboseName": "has a number above",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Phone",
                                                        "type": "has_phone",
                                                        "verboseName": "has a phone number",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Not Empty",
                                                        "type": "has_value",
                                                        "verboseName": "is not empty",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Attachment",
                                                        "initialArgument": "@input.attachments",
                                                        "type": "has_attachment",
                                                        "verboseName": "has an attachment",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_pattern",
                                                        "verboseName": "matches regex",
                                                      },
                                                    ]
                                                  }
                                                  selectOption={[Function]}
                                                  selectProps={
                                                    Object {
                                                      "backspaceRemovesValue": true,
                                                      "blurInputOnSelect": true,
                                                      "captureMenuScroll": false,
                                                      "className": "select-base",
                                                      "closeMenuOnScroll": false,
                                                      "closeMenuOnSelect": true,
                                                      "components": Object {},
                                                      "controlShouldRenderValue": true,
                                                      "data-spec": "operator-list",
                                                      "defaultInputValue": "",
                                                      "defaultMenuIsOpen": false,
                                                      "defaultValue": null,
                                                      "escapeClearsValue": false,
                                                      "filterOption": [Function],
                                                      "formatGroupLabel": [Function],
                                                      "getOptionLabel": [Function],
                                                      "getOptionValue": [Function],
                                                      "inputValue": "",
                                                      "isClearable": false,
                                                      "isDisabled": false,
                                                      "isLoading": false,
                                                      "isMulti": false,
                                                      "isOptionDisabled": [Function],
                                                      "isRtl": false,
                                                      "isSearchable": false,
                                                      "loadingMessage": [Function],
                                                      "maxMenuHeight": 300,
                                                      "menuIsOpen": false,
                                                      "menuPlacement": "auto",
                                                      "menuPosition": "absolute",
                                                      "menuShouldBlockScroll": false,
                                                      "menuShouldScrollIntoView": true,
                                                      "minMenuHeight": 140,
                                                      "name": "operator",
                                                      "noOptionsMessage": [Function],
                                                      "onChange": [Function],
                                                      "onInputChange": [Function],
                                                      "onMenuClose": [Function],
                                                      "onMenuOpen": [Function],
                                                      "openMenuOnClick": true,
                                                      "openMenuOnFocus": false,
                                                      "options": Array [
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_beginning",
                                                          "verboseName": "starts with",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Number",
                                                          "type": "has_number",
                                                          "verboseName": "has a number",
                                                        },
                                                        Object {
                                                          "additionalArguments": 2,
                                                          "type": "has_number_between",
                                                          "verboseName": "has a number between",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_lt",
                                                          "verboseName": "has a number below",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_lte",
                                                          "verboseName": "has a number at or below",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_eq",
                                                          "verboseName": "has a number equal to",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_gte",
                                                          "verboseName": "has a number at or above",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_gt",
                                                          "verboseName": "has a number above",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Phone",
                                                          "type": "has_phone",
                                                          "verboseName": "has a phone number",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Not Empty",
                                                          "type": "has_value",
                                                          "verboseName": "is not empty",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Attachment",
                                                          "initialArgument": "@input.attachments",
                                                          "type": "has_attachment",
                                                          "verboseName": "has an attachment",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_pattern",
                                                          "verboseName": "matches regex",
                                                        },
                                                      ],
                                                      "pageSize": 5,
                                                      "placeholder": "Select...",
                                                      "screenReaderStatus": [Function],
                                                      "styles": Object {
                                                        "control": [Function],
                                                        "indicatorsContainer": [Function],
                                                        "input": [Function],
                                                        "menuList": [Function],
                                                        "option": [Function],
                                                        "singleValue": [Function],
                                                        "valueContainer": [Function],
                                                      },
                                                      "tabIndex": "0",
                                                      "tabSelectsValue": true,
                                                      "value": Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_any_word",
                                                        "verboseName": "has any of the words",
                                                        "visibility": Array [
                                                          "messaging",
                                                          "messaging_offline",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  setValue={[Function]}
                                                  theme={
                                                    Object {
                                                      "borderRadius": 4,
                                                      "colors": Object {
                                                        "danger": "#DE350B",
                                                        "dangerLight": "#FFBDAD",
                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                        "primary": "#2684FF",
                                                        "primary25": "#DEEBFF",
                                                        "primary50": "#B2D4FF",
                                                        "primary75": "#4C9AFF",
                                                      },
                                                      "spacing": Object {
                                                        "baseUnit": 4,
                                                        "controlHeight": 38,
                                                        "menuGutter": 8,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="css-10nd86i select-base"
                                                    onKeyDown={[Function]}
                                                  >
                                                    <Control
                                                      clearValue={[Function]}
                                                      cx={[Function]}
                                                      getStyles={[Function]}
                                                      getValue={[Function]}
                                                      hasValue={true}
                                                      innerProps={
                                                        Object {
                                                          "onMouseDown": [Function],
                                                          "onTouchEnd": [Function],
                                                        }
                                                      }
                                                      innerRef={[Function]}
                                                      isDisabled={false}
                                                      isFocused={false}
                                                      isMulti={false}
                                                      isRtl={false}
                                                      menuIsOpen={false}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_beginning",
                                                            "verboseName": "starts with",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Number",
                                                            "type": "has_number",
                                                            "verboseName": "has a number",
                                                          },
                                                          Object {
                                                            "additionalArguments": 2,
                                                            "type": "has_number_between",
                                                            "verboseName": "has a number between",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_lt",
                                                            "verboseName": "has a number below",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_lte",
                                                            "verboseName": "has a number at or below",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_eq",
                                                            "verboseName": "has a number equal to",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_gte",
                                                            "verboseName": "has a number at or above",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_gt",
                                                            "verboseName": "has a number above",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Phone",
                                                            "type": "has_phone",
                                                            "verboseName": "has a phone number",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Not Empty",
                                                            "type": "has_value",
                                                            "verboseName": "is not empty",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Attachment",
                                                            "initialArgument": "@input.attachments",
                                                            "type": "has_attachment",
                                                            "verboseName": "has an attachment",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_pattern",
                                                            "verboseName": "matches regex",
                                                          },
                                                        ]
                                                      }
                                                      selectOption={[Function]}
                                                      selectProps={
                                                        Object {
                                                          "backspaceRemovesValue": true,
                                                          "blurInputOnSelect": true,
                                                          "captureMenuScroll": false,
                                                          "className": "select-base",
                                                          "closeMenuOnScroll": false,
                                                          "closeMenuOnSelect": true,
                                                          "components": Object {},
                                                          "controlShouldRenderValue": true,
                                                          "data-spec": "operator-list",
                                                          "defaultInputValue": "",
                                                          "defaultMenuIsOpen": false,
                                                          "defaultValue": null,
                                                          "escapeClearsValue": false,
                                                          "filterOption": [Function],
                                                          "formatGroupLabel": [Function],
                                                          "getOptionLabel": [Function],
                                                          "getOptionValue": [Function],
                                                          "inputValue": "",
                                                          "isClearable": false,
                                                          "isDisabled": false,
                                                          "isLoading": false,
                                                          "isMulti": false,
                                                          "isOptionDisabled": [Function],
                                                          "isRtl": false,
                                                          "isSearchable": false,
                                                          "loadingMessage": [Function],
                                                          "maxMenuHeight": 300,
                                                          "menuIsOpen": false,
                                                          "menuPlacement": "auto",
                                                          "menuPosition": "absolute",
                                                          "menuShouldBlockScroll": false,
                                                          "menuShouldScrollIntoView": true,
                                                          "minMenuHeight": 140,
                                                          "name": "operator",
                                                          "noOptionsMessage": [Function],
                                                          "onChange": [Function],
                                                          "onInputChange": [Function],
                                                          "onMenuClose": [Function],
                                                          "onMenuOpen": [Function],
                                                          "openMenuOnClick": true,
                                                          "openMenuOnFocus": false,
                                                          "options": Array [
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_beginning",
                                                              "verboseName": "starts with",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Number",
                                                              "type": "has_number",
                                                              "verboseName": "has a number",
                                                            },
                                                            Object {
                                                              "additionalArguments": 2,
                                                              "type": "has_number_between",
                                                              "verboseName": "has a number between",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_lt",
                                                              "verboseName": "has a number below",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_lte",
                                                              "verboseName": "has a number at or below",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_eq",
                                                              "verboseName": "has a number equal to",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_gte",
                                                              "verboseName": "has a number at or above",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_gt",
                                                              "verboseName": "has a number above",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Phone",
                                                              "type": "has_phone",
                                                              "verboseName": "has a phone number",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Not Empty",
                                                              "type": "has_value",
                                                              "verboseName": "is not empty",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Attachment",
                                                              "initialArgument": "@input.attachments",
                                                              "type": "has_attachment",
                                                              "verboseName": "has an attachment",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_pattern",
                                                              "verboseName": "matches regex",
                                                            },
                                                          ],
                                                          "pageSize": 5,
                                                          "placeholder": "Select...",
                                                          "screenReaderStatus": [Function],
                                                          "styles": Object {
                                                            "control": [Function],
                                                            "indicatorsContainer": [Function],
                                                            "input": [Function],
                                                            "menuList": [Function],
                                                            "option": [Function],
                                                            "singleValue": [Function],
                                                            "valueContainer": [Function],
                                                          },
                                                          "tabIndex": "0",
                                                          "tabSelectsValue": true,
                                                          "value": Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_any_word",
                                                            "verboseName": "has any of the words",
                                                            "visibility": Array [
                                                              "messaging",
                                                              "messaging_offline",
                                                            ],
                                                          },
                                                        }
                                                      }
                                                      setValue={[Function]}
                                                      theme={
                                                        Object {
                                                          "borderRadius": 4,
                                                          "colors": Object {
                                                            "danger": "#DE350B",
                                                            "dangerLight": "#FFBDAD",
                                                            "neutral0": "hsl(0, 0%, 100%)",
                                                            "neutral10": "hsl(0, 0%, 90%)",
                                                            "neutral20": "hsl(0, 0%, 80%)",
                                                            "neutral30": "hsl(0, 0%, 70%)",
                                                            "neutral40": "hsl(0, 0%, 60%)",
                                                            "neutral5": "hsl(0, 0%, 95%)",
                                                            "neutral50": "hsl(0, 0%, 50%)",
                                                            "neutral60": "hsl(0, 0%, 40%)",
                                                            "neutral70": "hsl(0, 0%, 30%)",
                                                            "neutral80": "hsl(0, 0%, 20%)",
                                                            "neutral90": "hsl(0, 0%, 10%)",
                                                            "primary": "#2684FF",
                                                            "primary25": "#DEEBFF",
                                                            "primary50": "#B2D4FF",
                                                            "primary75": "#4C9AFF",
                                                          },
                                                          "spacing": Object {
                                                            "baseUnit": 4,
                                                            "controlHeight": 38,
                                                            "menuGutter": 8,
                                                          },
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="css-1vpc3wb"
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                      >
                                                        <ValueContainer
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          isDisabled={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_beginning",
                                                                "verboseName": "starts with",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Number",
                                                                "type": "has_number",
                                                                "verboseName": "has a number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 2,
                                                                "type": "has_number_between",
                                                                "verboseName": "has a number between",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lt",
                                                                "verboseName": "has a number below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lte",
                                                                "verboseName": "has a number at or below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_eq",
                                                                "verboseName": "has a number equal to",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gte",
                                                                "verboseName": "has a number at or above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gt",
                                                                "verboseName": "has a number above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Phone",
                                                                "type": "has_phone",
                                                                "verboseName": "has a phone number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Not Empty",
                                                                "type": "has_value",
                                                                "verboseName": "is not empty",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Attachment",
                                                                "initialArgument": "@input.attachments",
                                                                "type": "has_attachment",
                                                                "verboseName": "has an attachment",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_pattern",
                                                                "verboseName": "matches regex",
                                                              },
                                                            ]
                                                          }
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "select-base",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {},
                                                              "controlShouldRenderValue": true,
                                                              "data-spec": "operator-list",
                                                              "defaultInputValue": "",
                                                              "defaultMenuIsOpen": false,
                                                              "defaultValue": null,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "inputValue": "",
                                                              "isClearable": false,
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "auto",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "operator",
                                                              "noOptionsMessage": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_beginning",
                                                                  "verboseName": "starts with",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Number",
                                                                  "type": "has_number",
                                                                  "verboseName": "has a number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 2,
                                                                  "type": "has_number_between",
                                                                  "verboseName": "has a number between",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lt",
                                                                  "verboseName": "has a number below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lte",
                                                                  "verboseName": "has a number at or below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_eq",
                                                                  "verboseName": "has a number equal to",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gte",
                                                                  "verboseName": "has a number at or above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gt",
                                                                  "verboseName": "has a number above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Phone",
                                                                  "type": "has_phone",
                                                                  "verboseName": "has a phone number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Not Empty",
                                                                  "type": "has_value",
                                                                  "verboseName": "is not empty",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Attachment",
                                                                  "initialArgument": "@input.attachments",
                                                                  "type": "has_attachment",
                                                                  "verboseName": "has an attachment",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_pattern",
                                                                  "verboseName": "matches regex",
                                                                },
                                                              ],
                                                              "pageSize": 5,
                                                              "placeholder": "Select...",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {
                                                                "control": [Function],
                                                                "indicatorsContainer": [Function],
                                                                "input": [Function],
                                                                "menuList": [Function],
                                                                "option": [Function],
                                                                "singleValue": [Function],
                                                                "valueContainer": [Function],
                                                              },
                                                              "tabIndex": "0",
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_any_word",
                                                                "verboseName": "has any of the words",
                                                                "visibility": Array [
                                                                  "messaging",
                                                                  "messaging_offline",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="css-c2yhe2"
                                                          >
                                                            <SingleValue
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              data={
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_any_word",
                                                                  "verboseName": "has any of the words",
                                                                  "visibility": Array [
                                                                    "messaging",
                                                                    "messaging_offline",
                                                                  ],
                                                                }
                                                              }
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              isDisabled={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="css-16k2dzr"
                                                              >
                                                                has any of the words
                                                              </div>
                                                            </SingleValue>
                                                            <DummyInput
                                                              disabled={false}
                                                              id="react-select-2-input"
                                                              innerRef={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              readOnly={true}
                                                              tabIndex="0"
                                                              value=""
                                                            >
                                                              <input
                                                                className="css-14uuagi"
                                                                disabled={false}
                                                                id="react-select-2-input"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                readOnly={true}
                                                                tabIndex="0"
                                                                value=""
                                                              />
                                                            </DummyInput>
                                                          </div>
                                                        </ValueContainer>
                                                        <IndicatorsContainer
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          isDisabled={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_beginning",
                                                                "verboseName": "starts with",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Number",
                                                                "type": "has_number",
                                                                "verboseName": "has a number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 2,
                                                                "type": "has_number_between",
                                                                "verboseName": "has a number between",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lt",
                                                                "verboseName": "has a number below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lte",
                                                                "verboseName": "has a number at or below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_eq",
                                                                "verboseName": "has a number equal to",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gte",
                                                                "verboseName": "has a number at or above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gt",
                                                                "verboseName": "has a number above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Phone",
                                                                "type": "has_phone",
                                                                "verboseName": "has a phone number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Not Empty",
                                                                "type": "has_value",
                                                                "verboseName": "is not empty",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Attachment",
                                                                "initialArgument": "@input.attachments",
                                                                "type": "has_attachment",
                                                                "verboseName": "has an attachment",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_pattern",
                                                                "verboseName": "matches regex",
                                                              },
                                                            ]
                                                          }
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "select-base",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {},
                                                              "controlShouldRenderValue": true,
                                                              "data-spec": "operator-list",
                                                              "defaultInputValue": "",
                                                              "defaultMenuIsOpen": false,
                                                              "defaultValue": null,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "inputValue": "",
                                                              "isClearable": false,
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "auto",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "operator",
                                                              "noOptionsMessage": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_beginning",
                                                                  "verboseName": "starts with",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Number",
                                                                  "type": "has_number",
                                                                  "verboseName": "has a number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 2,
                                                                  "type": "has_number_between",
                                                                  "verboseName": "has a number between",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lt",
                                                                  "verboseName": "has a number below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lte",
                                                                  "verboseName": "has a number at or below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_eq",
                                                                  "verboseName": "has a number equal to",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gte",
                                                                  "verboseName": "has a number at or above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gt",
                                                                  "verboseName": "has a number above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Phone",
                                                                  "type": "has_phone",
                                                                  "verboseName": "has a phone number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Not Empty",
                                                                  "type": "has_value",
                                                                  "verboseName": "is not empty",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Attachment",
                                                                  "initialArgument": "@input.attachments",
                                                                  "type": "has_attachment",
                                                                  "verboseName": "has an attachment",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_pattern",
                                                                  "verboseName": "matches regex",
                                                                },
                                                              ],
                                                              "pageSize": 5,
                                                              "placeholder": "Select...",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {
                                                                "control": [Function],
                                                                "indicatorsContainer": [Function],
                                                                "input": [Function],
                                                                "menuList": [Function],
                                                                "option": [Function],
                                                                "singleValue": [Function],
                                                                "valueContainer": [Function],
                                                              },
                                                              "tabIndex": "0",
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_any_word",
                                                                "verboseName": "has any of the words",
                                                                "visibility": Array [
                                                                  "messaging",
                                                                  "messaging_offline",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="css-1l76mts"
                                                          >
                                                            <IndicatorSeparator
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              isDisabled={false}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="css-d8oujb"
                                                              />
                                                            </IndicatorSeparator>
                                                            <DropdownIndicator
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              innerProps={
                                                                Object {
                                                                  "aria-hidden": "true",
                                                                  "onMouseDown": [Function],
                                                                  "onTouchEnd": [Function],
                                                                }
                                                              }
                                                              isDisabled={false}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                aria-hidden="true"
                                                                className="css-1ep9fjw"
                                                                onMouseDown={[Function]}
                                                                onTouchEnd={[Function]}
                                                              >
                                                                <DownChevron>
                                                                  <Svg
                                                                    size={20}
                                                                  >
                                                                    <svg
                                                                      aria-hidden="true"
                                                                      className="css-19bqh2r"
                                                                      focusable="false"
                                                                      height={20}
                                                                      viewBox="0 0 20 20"
                                                                      width={20}
                                                                    >
                                                                      <path
                                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                                      />
                                                                    </svg>
                                                                  </Svg>
                                                                </DownChevron>
                                                              </div>
                                                            </DropdownIndicator>
                                                          </div>
                                                        </IndicatorsContainer>
                                                      </div>
                                                    </Control>
                                                    <input
                                                      name="operator"
                                                      type="hidden"
                                                      value="has_any_word"
                                                    />
                                                  </div>
                                                </SelectContainer>
                                              </Select>
                                            </StateManager>
                                          </div>
                                          <div
                                            className="singleOperand"
                                          >
                                            <Connect(TextInputElement)
                                              autocomplete={true}
                                              data-spec="args-input"
                                              entry={
                                                Object {
                                                  "persistantFailures": Array [],
                                                  "value": "",
                                                }
                                              }
                                              name="arguments"
                                              onChange={[Function]}
                                              onFieldFailures={[Function]}
                                            >
                                              <TextInputElement
                                                assetStore={Object {}}
                                                autocomplete={true}
                                                data-spec="args-input"
                                                dispatch={[Function]}
                                                entry={
                                                  Object {
                                                    "persistantFailures": Array [],
                                                    "value": "",
                                                  }
                                                }
                                                name="arguments"
                                                onChange={[Function]}
                                                onFieldFailures={[Function]}
                                                typeConfig={null}
                                              >
                                                <FormElement
                                                  entry={
                                                    Object {
                                                      "persistantFailures": Array [],
                                                      "value": "",
                                                    }
                                                  }
                                                  name="arguments"
                                                  sendMsgError={false}
                                                >
                                                  <div
                                                    className="ele"
                                                  >
                                                    <div
                                                      className="wrapper"
                                                    >
                                                      <input
                                                        className="textinput"
                                                        data-spec="input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        type="text"
                                                        value=""
                                                      />
                                                      <div
                                                        className="completionContainer hidden"
                                                        data-spec="completion-options"
                                                        style={
                                                          Object {
                                                            "left": 0,
                                                            "top": 0,
                                                          }
                                                        }
                                                      >
                                                        <ul
                                                          className="option_list"
                                                          data-spec="completion-list"
                                                        />
                                                        <div
                                                          className="help"
                                                          data-spec="completion-help"
                                                        >
                                                          Tab to complete, enter to select
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </FormElement>
                                              </TextInputElement>
                                            </Connect(TextInputElement)>
                                          </div>
                                          <div
                                            className="categorizeAs"
                                          >
                                            categorize as
                                          </div>
                                          <div
                                            className="category"
                                          >
                                            <Connect(TextInputElement)
                                              data-spec="exit-input"
                                              entry={
                                                Object {
                                                  "value": "",
                                                }
                                              }
                                              name="exitName"
                                              onChange={[Function]}
                                              showInvalid={false}
                                            >
                                              <TextInputElement
                                                assetStore={Object {}}
                                                data-spec="exit-input"
                                                dispatch={[Function]}
                                                entry={
                                                  Object {
                                                    "value": "",
                                                  }
                                                }
                                                name="exitName"
                                                onChange={[Function]}
                                                showInvalid={false}
                                                typeConfig={null}
                                              >
                                                <FormElement
                                                  entry={
                                                    Object {
                                                      "value": "",
                                                    }
                                                  }
                                                  name="exitName"
                                                  sendMsgError={false}
                                                >
                                                  <div
                                                    className="ele"
                                                  >
                                                    <div
                                                      className="wrapper"
                                                    >
                                                      <input
                                                        className="textinput"
                                                        data-spec="input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        type="text"
                                                        value=""
                                                      />
                                                      <div
                                                        className="completionContainer hidden"
                                                        data-spec="completion-options"
                                                        style={
                                                          Object {
                                                            "left": 0,
                                                            "top": 0,
                                                          }
                                                        }
                                                      >
                                                        <ul
                                                          className="option_list"
                                                          data-spec="completion-list"
                                                        />
                                                        <div
                                                          className="help"
                                                          data-spec="completion-help"
                                                        >
                                                          Tab to complete, enter to select
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </FormElement>
                                              </TextInputElement>
                                            </Connect(TextInputElement)>
                                          </div>
                                          <span
                                            className="fe-x removeIcon"
                                            onClick={[Function]}
                                          />
                                        </div>
                                      </div>
                                    </FormElement>
                                  </CaseElement>
                                </div>
                              </div>
                            </DragHandle>
                          </Motion>
                        </Movable>
                      </DraggableDimensionPublisher>
                    </Connect(DraggableDimensionPublisher)>
                  </Draggable>
                </Connect(Draggable)>
              </div>
            </DroppableDimensionPublisher>
          </Connect(DroppableDimensionPublisher)>
        </Droppable>
      </Connect(Droppable)>
    </DragDropContext>
  </div>
</CaseList>
`;

exports[`CaseList render should render list of cases 1`] = `
<CaseList
  cases={
    Array [
      Object {
        "categoryName": "Red",
        "kase": Object {
          "arguments": Array [
            "Red, r",
          ],
          "category_uuid": "38c1m4g4-b424-585d-8cgi-384d6260ymca",
          "type": "has_any_word",
          "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
        },
        "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
        "valid": true,
      },
      Object {
        "categoryName": "Green",
        "kase": Object {
          "arguments": Array [
            "Green, g",
          ],
          "category_uuid": "38c1m4g4-b424-585d-8cgi-384d6260ymca",
          "type": "has_any_word",
          "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
        },
        "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
        "valid": true,
      },
      Object {
        "categoryName": "",
        "kase": Object {
          "arguments": Array [
            "",
          ],
          "category_uuid": null,
          "type": "has_any_word",
          "uuid": "763e4844-3e1b-407a-a1b5-5fdfcd308b41",
        },
        "uuid": "763e4844-3e1b-407a-a1b5-5fdfcd308b41",
        "valid": true,
      },
    ]
  }
  onCasesUpdated={[MockFunction]}
>
  <div
    className="caseList"
  >
    <DragDropContext
      onDragEnd={[Function]}
    >
      <Connect(Droppable)
        droppableId="droppable"
      >
        <Droppable
          direction="vertical"
          dispatch={[Function]}
          droppableId="droppable"
          ignoreContainerClipping={false}
          isDraggingOver={false}
          isDropDisabled={false}
          placeholder={null}
          type="DEFAULT"
        >
          <Connect(DroppableDimensionPublisher)
            direction="vertical"
            droppableId="droppable"
            ignoreContainerClipping={false}
            isDropDisabled={false}
            targetRef={
              <div
                style="cursor: pointer;"
              >
                <div
                  data-spec="case-draggable"
                >
                  <div
                    aria-grabbed="false"
                    draggable="false"
                    style="user-select: none; outline: none; pointer-events: auto;"
                    tabindex="0"
                  >
                    <div
                      class="ele group"
                    >
                      <div
                        class="kase"
                      >
                        <span
                          class="fe-chevrons-expand dndIcon"
                        />
                        <div
                          class="choice select-medium"
                        >
                          <div
                            class="css-10nd86i select-base"
                          >
                            <div
                              class="css-1vpc3wb"
                            >
                              <div
                                class="css-c2yhe2"
                              >
                                <div
                                  class="css-16k2dzr"
                                >
                                  has any of the words
                                </div>
                                <input
                                  class="css-14uuagi"
                                  id="react-select-3-input"
                                  readonly=""
                                  tabindex="0"
                                  value=""
                                />
                              </div>
                              <div
                                class="css-1l76mts"
                              >
                                <span
                                  class="css-d8oujb"
                                />
                                <div
                                  aria-hidden="true"
                                  class="css-1ep9fjw"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="css-19bqh2r"
                                    focusable="false"
                                    height="20"
                                    viewBox="0 0 20 20"
                                    width="20"
                                  >
                                    <path
                                      d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                    />
                                  </svg>
                                </div>
                              </div>
                            </div>
                            <input
                              name="operator"
                              type="hidden"
                              value="has_any_word"
                            />
                          </div>
                        </div>
                        <div
                          class="singleOperand"
                        >
                          <div
                            class="ele"
                          >
                            <div
                              class="wrapper"
                            >
                              <input
                                class="textinput"
                                data-spec="input"
                                type="text"
                                value="Red, r"
                              />
                              <div
                                class="completionContainer hidden"
                                data-spec="completion-options"
                                style="top: 0px; left: 0px;"
                              >
                                <ul
                                  class="option_list"
                                  data-spec="completion-list"
                                />
                                <div
                                  class="help"
                                  data-spec="completion-help"
                                >
                                  Tab to complete, enter to select
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="categorizeAs"
                        >
                          categorize as
                        </div>
                        <div
                          class="category"
                        >
                          <div
                            class="ele"
                          >
                            <div
                              class="wrapper"
                            >
                              <input
                                class="textinput"
                                data-spec="input"
                                type="text"
                                value="Red"
                              />
                              <div
                                class="completionContainer hidden"
                                data-spec="completion-options"
                                style="top: 0px; left: 0px;"
                              >
                                <ul
                                  class="option_list"
                                  data-spec="completion-list"
                                />
                                <div
                                  class="help"
                                  data-spec="completion-help"
                                >
                                  Tab to complete, enter to select
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <span
                          class="fe-x removeIcon"
                        />
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  data-spec="case-draggable"
                >
                  <div
                    aria-grabbed="false"
                    draggable="false"
                    style="user-select: none; outline: none; pointer-events: auto;"
                    tabindex="0"
                  >
                    <div
                      class="ele group"
                    >
                      <div
                        class="kase"
                      >
                        <span
                          class="fe-chevrons-expand dndIcon"
                        />
                        <div
                          class="choice select-medium"
                        >
                          <div
                            class="css-10nd86i select-base"
                          >
                            <div
                              class="css-1vpc3wb"
                            >
                              <div
                                class="css-c2yhe2"
                              >
                                <div
                                  class="css-16k2dzr"
                                >
                                  has any of the words
                                </div>
                                <input
                                  class="css-14uuagi"
                                  id="react-select-4-input"
                                  readonly=""
                                  tabindex="0"
                                  value=""
                                />
                              </div>
                              <div
                                class="css-1l76mts"
                              >
                                <span
                                  class="css-d8oujb"
                                />
                                <div
                                  aria-hidden="true"
                                  class="css-1ep9fjw"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="css-19bqh2r"
                                    focusable="false"
                                    height="20"
                                    viewBox="0 0 20 20"
                                    width="20"
                                  >
                                    <path
                                      d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                    />
                                  </svg>
                                </div>
                              </div>
                            </div>
                            <input
                              name="operator"
                              type="hidden"
                              value="has_any_word"
                            />
                          </div>
                        </div>
                        <div
                          class="singleOperand"
                        >
                          <div
                            class="ele"
                          >
                            <div
                              class="wrapper"
                            >
                              <input
                                class="textinput"
                                data-spec="input"
                                type="text"
                                value="Green, g"
                              />
                              <div
                                class="completionContainer hidden"
                                data-spec="completion-options"
                                style="top: 0px; left: 0px;"
                              >
                                <ul
                                  class="option_list"
                                  data-spec="completion-list"
                                />
                                <div
                                  class="help"
                                  data-spec="completion-help"
                                >
                                  Tab to complete, enter to select
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="categorizeAs"
                        >
                          categorize as
                        </div>
                        <div
                          class="category"
                        >
                          <div
                            class="ele"
                          >
                            <div
                              class="wrapper"
                            >
                              <input
                                class="textinput"
                                data-spec="input"
                                type="text"
                                value="Green"
                              />
                              <div
                                class="completionContainer hidden"
                                data-spec="completion-options"
                                style="top: 0px; left: 0px;"
                              >
                                <ul
                                  class="option_list"
                                  data-spec="completion-list"
                                />
                                <div
                                  class="help"
                                  data-spec="completion-help"
                                >
                                  Tab to complete, enter to select
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <span
                          class="fe-x removeIcon"
                        />
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  data-spec="case-draggable"
                >
                  <div
                    style="user-select: none; outline: none; pointer-events: auto;"
                  >
                    <div
                      class="ele group"
                    >
                      <div
                        class="kase"
                      >
                        <span
                          class="fe-chevrons-expand dndIcon"
                        />
                        <div
                          class="choice select-medium"
                        >
                          <div
                            class="css-10nd86i select-base"
                          >
                            <div
                              class="css-1vpc3wb"
                            >
                              <div
                                class="css-c2yhe2"
                              >
                                <div
                                  class="css-16k2dzr"
                                >
                                  has any of the words
                                </div>
                                <input
                                  class="css-14uuagi"
                                  id="react-select-5-input"
                                  readonly=""
                                  tabindex="0"
                                  value=""
                                />
                              </div>
                              <div
                                class="css-1l76mts"
                              >
                                <span
                                  class="css-d8oujb"
                                />
                                <div
                                  aria-hidden="true"
                                  class="css-1ep9fjw"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="css-19bqh2r"
                                    focusable="false"
                                    height="20"
                                    viewBox="0 0 20 20"
                                    width="20"
                                  >
                                    <path
                                      d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                    />
                                  </svg>
                                </div>
                              </div>
                            </div>
                            <input
                              name="operator"
                              type="hidden"
                              value="has_any_word"
                            />
                          </div>
                        </div>
                        <div
                          class="singleOperand"
                        >
                          <div
                            class="ele"
                          >
                            <div
                              class="wrapper"
                            >
                              <input
                                class="textinput"
                                data-spec="input"
                                type="text"
                                value=""
                              />
                              <div
                                class="completionContainer hidden"
                                data-spec="completion-options"
                                style="top: 0px; left: 0px;"
                              >
                                <ul
                                  class="option_list"
                                  data-spec="completion-list"
                                />
                                <div
                                  class="help"
                                  data-spec="completion-help"
                                >
                                  Tab to complete, enter to select
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div
                          class="categorizeAs"
                        >
                          categorize as
                        </div>
                        <div
                          class="category"
                        >
                          <div
                            class="ele"
                          >
                            <div
                              class="wrapper"
                            >
                              <input
                                class="textinput"
                                data-spec="input"
                                type="text"
                                value=""
                              />
                              <div
                                class="completionContainer hidden"
                                data-spec="completion-options"
                                style="top: 0px; left: 0px;"
                              >
                                <ul
                                  class="option_list"
                                  data-spec="completion-list"
                                />
                                <div
                                  class="help"
                                  data-spec="completion-help"
                                >
                                  Tab to complete, enter to select
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <span
                          class="fe-x removeIcon"
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            }
            type="DEFAULT"
          >
            <DroppableDimensionPublisher
              direction="vertical"
              droppableId="droppable"
              ignoreContainerClipping={false}
              isDropDisabled={false}
              publish={[Function]}
              shouldPublish={false}
              targetRef={
                <div
                  style="cursor: pointer;"
                >
                  <div
                    data-spec="case-draggable"
                  >
                    <div
                      aria-grabbed="false"
                      draggable="false"
                      style="user-select: none; outline: none; pointer-events: auto;"
                      tabindex="0"
                    >
                      <div
                        class="ele group"
                      >
                        <div
                          class="kase"
                        >
                          <span
                            class="fe-chevrons-expand dndIcon"
                          />
                          <div
                            class="choice select-medium"
                          >
                            <div
                              class="css-10nd86i select-base"
                            >
                              <div
                                class="css-1vpc3wb"
                              >
                                <div
                                  class="css-c2yhe2"
                                >
                                  <div
                                    class="css-16k2dzr"
                                  >
                                    has any of the words
                                  </div>
                                  <input
                                    class="css-14uuagi"
                                    id="react-select-3-input"
                                    readonly=""
                                    tabindex="0"
                                    value=""
                                  />
                                </div>
                                <div
                                  class="css-1l76mts"
                                >
                                  <span
                                    class="css-d8oujb"
                                  />
                                  <div
                                    aria-hidden="true"
                                    class="css-1ep9fjw"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="css-19bqh2r"
                                      focusable="false"
                                      height="20"
                                      viewBox="0 0 20 20"
                                      width="20"
                                    >
                                      <path
                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                              <input
                                name="operator"
                                type="hidden"
                                value="has_any_word"
                              />
                            </div>
                          </div>
                          <div
                            class="singleOperand"
                          >
                            <div
                              class="ele"
                            >
                              <div
                                class="wrapper"
                              >
                                <input
                                  class="textinput"
                                  data-spec="input"
                                  type="text"
                                  value="Red, r"
                                />
                                <div
                                  class="completionContainer hidden"
                                  data-spec="completion-options"
                                  style="top: 0px; left: 0px;"
                                >
                                  <ul
                                    class="option_list"
                                    data-spec="completion-list"
                                  />
                                  <div
                                    class="help"
                                    data-spec="completion-help"
                                  >
                                    Tab to complete, enter to select
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="categorizeAs"
                          >
                            categorize as
                          </div>
                          <div
                            class="category"
                          >
                            <div
                              class="ele"
                            >
                              <div
                                class="wrapper"
                              >
                                <input
                                  class="textinput"
                                  data-spec="input"
                                  type="text"
                                  value="Red"
                                />
                                <div
                                  class="completionContainer hidden"
                                  data-spec="completion-options"
                                  style="top: 0px; left: 0px;"
                                >
                                  <ul
                                    class="option_list"
                                    data-spec="completion-list"
                                  />
                                  <div
                                    class="help"
                                    data-spec="completion-help"
                                  >
                                    Tab to complete, enter to select
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <span
                            class="fe-x removeIcon"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-spec="case-draggable"
                  >
                    <div
                      aria-grabbed="false"
                      draggable="false"
                      style="user-select: none; outline: none; pointer-events: auto;"
                      tabindex="0"
                    >
                      <div
                        class="ele group"
                      >
                        <div
                          class="kase"
                        >
                          <span
                            class="fe-chevrons-expand dndIcon"
                          />
                          <div
                            class="choice select-medium"
                          >
                            <div
                              class="css-10nd86i select-base"
                            >
                              <div
                                class="css-1vpc3wb"
                              >
                                <div
                                  class="css-c2yhe2"
                                >
                                  <div
                                    class="css-16k2dzr"
                                  >
                                    has any of the words
                                  </div>
                                  <input
                                    class="css-14uuagi"
                                    id="react-select-4-input"
                                    readonly=""
                                    tabindex="0"
                                    value=""
                                  />
                                </div>
                                <div
                                  class="css-1l76mts"
                                >
                                  <span
                                    class="css-d8oujb"
                                  />
                                  <div
                                    aria-hidden="true"
                                    class="css-1ep9fjw"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="css-19bqh2r"
                                      focusable="false"
                                      height="20"
                                      viewBox="0 0 20 20"
                                      width="20"
                                    >
                                      <path
                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                              <input
                                name="operator"
                                type="hidden"
                                value="has_any_word"
                              />
                            </div>
                          </div>
                          <div
                            class="singleOperand"
                          >
                            <div
                              class="ele"
                            >
                              <div
                                class="wrapper"
                              >
                                <input
                                  class="textinput"
                                  data-spec="input"
                                  type="text"
                                  value="Green, g"
                                />
                                <div
                                  class="completionContainer hidden"
                                  data-spec="completion-options"
                                  style="top: 0px; left: 0px;"
                                >
                                  <ul
                                    class="option_list"
                                    data-spec="completion-list"
                                  />
                                  <div
                                    class="help"
                                    data-spec="completion-help"
                                  >
                                    Tab to complete, enter to select
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="categorizeAs"
                          >
                            categorize as
                          </div>
                          <div
                            class="category"
                          >
                            <div
                              class="ele"
                            >
                              <div
                                class="wrapper"
                              >
                                <input
                                  class="textinput"
                                  data-spec="input"
                                  type="text"
                                  value="Green"
                                />
                                <div
                                  class="completionContainer hidden"
                                  data-spec="completion-options"
                                  style="top: 0px; left: 0px;"
                                >
                                  <ul
                                    class="option_list"
                                    data-spec="completion-list"
                                  />
                                  <div
                                    class="help"
                                    data-spec="completion-help"
                                  >
                                    Tab to complete, enter to select
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <span
                            class="fe-x removeIcon"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    data-spec="case-draggable"
                  >
                    <div
                      style="user-select: none; outline: none; pointer-events: auto;"
                    >
                      <div
                        class="ele group"
                      >
                        <div
                          class="kase"
                        >
                          <span
                            class="fe-chevrons-expand dndIcon"
                          />
                          <div
                            class="choice select-medium"
                          >
                            <div
                              class="css-10nd86i select-base"
                            >
                              <div
                                class="css-1vpc3wb"
                              >
                                <div
                                  class="css-c2yhe2"
                                >
                                  <div
                                    class="css-16k2dzr"
                                  >
                                    has any of the words
                                  </div>
                                  <input
                                    class="css-14uuagi"
                                    id="react-select-5-input"
                                    readonly=""
                                    tabindex="0"
                                    value=""
                                  />
                                </div>
                                <div
                                  class="css-1l76mts"
                                >
                                  <span
                                    class="css-d8oujb"
                                  />
                                  <div
                                    aria-hidden="true"
                                    class="css-1ep9fjw"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="css-19bqh2r"
                                      focusable="false"
                                      height="20"
                                      viewBox="0 0 20 20"
                                      width="20"
                                    >
                                      <path
                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                      />
                                    </svg>
                                  </div>
                                </div>
                              </div>
                              <input
                                name="operator"
                                type="hidden"
                                value="has_any_word"
                              />
                            </div>
                          </div>
                          <div
                            class="singleOperand"
                          >
                            <div
                              class="ele"
                            >
                              <div
                                class="wrapper"
                              >
                                <input
                                  class="textinput"
                                  data-spec="input"
                                  type="text"
                                  value=""
                                />
                                <div
                                  class="completionContainer hidden"
                                  data-spec="completion-options"
                                  style="top: 0px; left: 0px;"
                                >
                                  <ul
                                    class="option_list"
                                    data-spec="completion-list"
                                  />
                                  <div
                                    class="help"
                                    data-spec="completion-help"
                                  >
                                    Tab to complete, enter to select
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div
                            class="categorizeAs"
                          >
                            categorize as
                          </div>
                          <div
                            class="category"
                          >
                            <div
                              class="ele"
                            >
                              <div
                                class="wrapper"
                              >
                                <input
                                  class="textinput"
                                  data-spec="input"
                                  type="text"
                                  value=""
                                />
                                <div
                                  class="completionContainer hidden"
                                  data-spec="completion-options"
                                  style="top: 0px; left: 0px;"
                                >
                                  <ul
                                    class="option_list"
                                    data-spec="completion-list"
                                  />
                                  <div
                                    class="help"
                                    data-spec="completion-help"
                                  >
                                    Tab to complete, enter to select
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <span
                            class="fe-x removeIcon"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              }
              type="DEFAULT"
              updateIsEnabled={[Function]}
              updateScroll={[Function]}
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              >
                <Connect(Draggable)
                  draggableId="b1f332f3-bdd3-4891-aec5-1843a712dbf1"
                  isDragDisabled={false}
                  key="b1f332f3-bdd3-4891-aec5-1843a712dbf1"
                >
                  <Draggable
                    canAnimate={false}
                    canLift={true}
                    cancel={[Function]}
                    crossAxisMoveBackward={[Function]}
                    crossAxisMoveForward={[Function]}
                    dimension={null}
                    direction={null}
                    disableInteractiveElementBlocking={false}
                    draggableId="b1f332f3-bdd3-4891-aec5-1843a712dbf1"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    isDragDisabled={false}
                    isDragging={false}
                    isDropAnimating={false}
                    lift={[Function]}
                    move={[Function]}
                    moveBackward={[Function]}
                    moveByWindowScroll={[Function]}
                    moveForward={[Function]}
                    offset={
                      Object {
                        "x": 0,
                        "y": 0,
                      }
                    }
                    type="DEFAULT"
                  >
                    <Connect(DraggableDimensionPublisher)
                      draggableId="b1f332f3-bdd3-4891-aec5-1843a712dbf1"
                      droppableId="droppable"
                      targetRef={
                        <div
                          aria-grabbed="false"
                          draggable="false"
                          style="user-select: none; outline: none; pointer-events: auto;"
                          tabindex="0"
                        >
                          <div
                            class="ele group"
                          >
                            <div
                              class="kase"
                            >
                              <span
                                class="fe-chevrons-expand dndIcon"
                              />
                              <div
                                class="choice select-medium"
                              >
                                <div
                                  class="css-10nd86i select-base"
                                >
                                  <div
                                    class="css-1vpc3wb"
                                  >
                                    <div
                                      class="css-c2yhe2"
                                    >
                                      <div
                                        class="css-16k2dzr"
                                      >
                                        has any of the words
                                      </div>
                                      <input
                                        class="css-14uuagi"
                                        id="react-select-3-input"
                                        readonly=""
                                        tabindex="0"
                                        value=""
                                      />
                                    </div>
                                    <div
                                      class="css-1l76mts"
                                    >
                                      <span
                                        class="css-d8oujb"
                                      />
                                      <div
                                        aria-hidden="true"
                                        class="css-1ep9fjw"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="css-19bqh2r"
                                          focusable="false"
                                          height="20"
                                          viewBox="0 0 20 20"
                                          width="20"
                                        >
                                          <path
                                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  </div>
                                  <input
                                    name="operator"
                                    type="hidden"
                                    value="has_any_word"
                                  />
                                </div>
                              </div>
                              <div
                                class="singleOperand"
                              >
                                <div
                                  class="ele"
                                >
                                  <div
                                    class="wrapper"
                                  >
                                    <input
                                      class="textinput"
                                      data-spec="input"
                                      type="text"
                                      value="Red, r"
                                    />
                                    <div
                                      class="completionContainer hidden"
                                      data-spec="completion-options"
                                      style="top: 0px; left: 0px;"
                                    >
                                      <ul
                                        class="option_list"
                                        data-spec="completion-list"
                                      />
                                      <div
                                        class="help"
                                        data-spec="completion-help"
                                      >
                                        Tab to complete, enter to select
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <div
                                class="categorizeAs"
                              >
                                categorize as
                              </div>
                              <div
                                class="category"
                              >
                                <div
                                  class="ele"
                                >
                                  <div
                                    class="wrapper"
                                  >
                                    <input
                                      class="textinput"
                                      data-spec="input"
                                      type="text"
                                      value="Red"
                                    />
                                    <div
                                      class="completionContainer hidden"
                                      data-spec="completion-options"
                                      style="top: 0px; left: 0px;"
                                    >
                                      <ul
                                        class="option_list"
                                        data-spec="completion-list"
                                      />
                                      <div
                                        class="help"
                                        data-spec="completion-help"
                                      >
                                        Tab to complete, enter to select
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <span
                                class="fe-x removeIcon"
                              />
                            </div>
                          </div>
                        </div>
                      }
                      type="DEFAULT"
                    >
                      <DraggableDimensionPublisher
                        draggableId="b1f332f3-bdd3-4891-aec5-1843a712dbf1"
                        droppableId="droppable"
                        publish={[Function]}
                        shouldPublish={false}
                        targetRef={
                          <div
                            aria-grabbed="false"
                            draggable="false"
                            style="user-select: none; outline: none; pointer-events: auto;"
                            tabindex="0"
                          >
                            <div
                              class="ele group"
                            >
                              <div
                                class="kase"
                              >
                                <span
                                  class="fe-chevrons-expand dndIcon"
                                />
                                <div
                                  class="choice select-medium"
                                >
                                  <div
                                    class="css-10nd86i select-base"
                                  >
                                    <div
                                      class="css-1vpc3wb"
                                    >
                                      <div
                                        class="css-c2yhe2"
                                      >
                                        <div
                                          class="css-16k2dzr"
                                        >
                                          has any of the words
                                        </div>
                                        <input
                                          class="css-14uuagi"
                                          id="react-select-3-input"
                                          readonly=""
                                          tabindex="0"
                                          value=""
                                        />
                                      </div>
                                      <div
                                        class="css-1l76mts"
                                      >
                                        <span
                                          class="css-d8oujb"
                                        />
                                        <div
                                          aria-hidden="true"
                                          class="css-1ep9fjw"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="css-19bqh2r"
                                            focusable="false"
                                            height="20"
                                            viewBox="0 0 20 20"
                                            width="20"
                                          >
                                            <path
                                              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                            />
                                          </svg>
                                        </div>
                                      </div>
                                    </div>
                                    <input
                                      name="operator"
                                      type="hidden"
                                      value="has_any_word"
                                    />
                                  </div>
                                </div>
                                <div
                                  class="singleOperand"
                                >
                                  <div
                                    class="ele"
                                  >
                                    <div
                                      class="wrapper"
                                    >
                                      <input
                                        class="textinput"
                                        data-spec="input"
                                        type="text"
                                        value="Red, r"
                                      />
                                      <div
                                        class="completionContainer hidden"
                                        data-spec="completion-options"
                                        style="top: 0px; left: 0px;"
                                      >
                                        <ul
                                          class="option_list"
                                          data-spec="completion-list"
                                        />
                                        <div
                                          class="help"
                                          data-spec="completion-help"
                                        >
                                          Tab to complete, enter to select
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  class="categorizeAs"
                                >
                                  categorize as
                                </div>
                                <div
                                  class="category"
                                >
                                  <div
                                    class="ele"
                                  >
                                    <div
                                      class="wrapper"
                                    >
                                      <input
                                        class="textinput"
                                        data-spec="input"
                                        type="text"
                                        value="Red"
                                      />
                                      <div
                                        class="completionContainer hidden"
                                        data-spec="completion-options"
                                        style="top: 0px; left: 0px;"
                                      >
                                        <ul
                                          class="option_list"
                                          data-spec="completion-list"
                                        />
                                        <div
                                          class="help"
                                          data-spec="completion-help"
                                        >
                                          Tab to complete, enter to select
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <span
                                  class="fe-x removeIcon"
                                />
                              </div>
                            </div>
                          </div>
                        }
                        type="DEFAULT"
                      >
                        <Movable
                          destination={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          onMoveEnd={[Function]}
                          speed="INSTANT"
                        >
                          <Motion
                            defaultStyle={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            onRest={[Function]}
                            style={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                          >
                            <DragHandle
                              callbacks={
                                Object {
                                  "onCancel": [Function],
                                  "onCrossAxisMoveBackward": [Function],
                                  "onCrossAxisMoveForward": [Function],
                                  "onDrop": [Function],
                                  "onLift": [Function],
                                  "onMove": [Function],
                                  "onMoveBackward": [Function],
                                  "onMoveForward": [Function],
                                  "onWindowScroll": [Function],
                                }
                              }
                              canDragInteractiveElements={false}
                              canLift={true}
                              direction={null}
                              getDraggableRef={[Function]}
                              isDragging={false}
                              isEnabled={true}
                            >
                              <div
                                data-spec="case-draggable"
                              >
                                <div
                                  aria-grabbed={false}
                                  draggable={false}
                                  onClick={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onKeyDown={[Function]}
                                  onMouseDown={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  style={
                                    Object {
                                      "WebkitTapHighlightColor": "rgba(0,0,0,0)",
                                      "WebkitTouchCallout": "none",
                                      "outline": "none",
                                      "pointerEvents": "auto",
                                      "touchAction": "manipulation",
                                      "transform": null,
                                      "transition": null,
                                      "userSelect": "none",
                                    }
                                  }
                                  tabIndex={0}
                                >
                                  <CaseElement
                                    categoryName="Red"
                                    kase={
                                      Object {
                                        "arguments": Array [
                                          "Red, r",
                                        ],
                                        "category_uuid": "38c1m4g4-b424-585d-8cgi-384d6260ymca",
                                        "type": "has_any_word",
                                        "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
                                      }
                                    }
                                    key="b1f332f3-bdd3-4891-aec5-1843a712dbf1"
                                    onChange={[Function]}
                                    onRemove={[Function]}
                                    uuid="b1f332f3-bdd3-4891-aec5-1843a712dbf1"
                                    valid={true}
                                  >
                                    <FormElement
                                      __className="group"
                                      data-spec="case-form"
                                      kaseError={false}
                                    >
                                      <div
                                        className="ele group"
                                      >
                                        <div
                                          className="kase"
                                        >
                                          <span
                                            className="fe-chevrons-expand dndIcon"
                                          />
                                          <div
                                            className="choice select-medium"
                                          >
                                            <StateManager
                                              className="select-base"
                                              data-spec="operator-list"
                                              defaultInputValue=""
                                              defaultMenuIsOpen={false}
                                              defaultValue={null}
                                              getOptionLabel={[Function]}
                                              getOptionValue={[Function]}
                                              isClearable={false}
                                              isSearchable={false}
                                              menuPlacement="auto"
                                              name="operator"
                                              onChange={[Function]}
                                              options={
                                                Array [
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_beginning",
                                                    "verboseName": "starts with",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Number",
                                                    "type": "has_number",
                                                    "verboseName": "has a number",
                                                  },
                                                  Object {
                                                    "additionalArguments": 2,
                                                    "type": "has_number_between",
                                                    "verboseName": "has a number between",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_lt",
                                                    "verboseName": "has a number below",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_lte",
                                                    "verboseName": "has a number at or below",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_eq",
                                                    "verboseName": "has a number equal to",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_gte",
                                                    "verboseName": "has a number at or above",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_gt",
                                                    "verboseName": "has a number above",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Phone",
                                                    "type": "has_phone",
                                                    "verboseName": "has a phone number",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Not Empty",
                                                    "type": "has_value",
                                                    "verboseName": "is not empty",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Attachment",
                                                    "initialArgument": "@input.attachments",
                                                    "type": "has_attachment",
                                                    "verboseName": "has an attachment",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_pattern",
                                                    "verboseName": "matches regex",
                                                  },
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "control": [Function],
                                                  "indicatorsContainer": [Function],
                                                  "input": [Function],
                                                  "menuList": [Function],
                                                  "option": [Function],
                                                  "singleValue": [Function],
                                                  "valueContainer": [Function],
                                                }
                                              }
                                              value={
                                                Object {
                                                  "additionalArguments": 1,
                                                  "type": "has_any_word",
                                                  "verboseName": "has any of the words",
                                                  "visibility": Array [
                                                    "messaging",
                                                    "messaging_offline",
                                                  ],
                                                }
                                              }
                                            >
                                              <Select
                                                backspaceRemovesValue={true}
                                                blurInputOnSelect={true}
                                                captureMenuScroll={false}
                                                className="select-base"
                                                closeMenuOnScroll={false}
                                                closeMenuOnSelect={true}
                                                components={Object {}}
                                                controlShouldRenderValue={true}
                                                data-spec="operator-list"
                                                defaultInputValue=""
                                                defaultMenuIsOpen={false}
                                                defaultValue={null}
                                                escapeClearsValue={false}
                                                filterOption={[Function]}
                                                formatGroupLabel={[Function]}
                                                getOptionLabel={[Function]}
                                                getOptionValue={[Function]}
                                                inputValue=""
                                                isClearable={false}
                                                isDisabled={false}
                                                isLoading={false}
                                                isMulti={false}
                                                isOptionDisabled={[Function]}
                                                isRtl={false}
                                                isSearchable={false}
                                                loadingMessage={[Function]}
                                                maxMenuHeight={300}
                                                menuIsOpen={false}
                                                menuPlacement="auto"
                                                menuPosition="absolute"
                                                menuShouldBlockScroll={false}
                                                menuShouldScrollIntoView={true}
                                                minMenuHeight={140}
                                                name="operator"
                                                noOptionsMessage={[Function]}
                                                onChange={[Function]}
                                                onInputChange={[Function]}
                                                onMenuClose={[Function]}
                                                onMenuOpen={[Function]}
                                                openMenuOnClick={true}
                                                openMenuOnFocus={false}
                                                options={
                                                  Array [
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_beginning",
                                                      "verboseName": "starts with",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Number",
                                                      "type": "has_number",
                                                      "verboseName": "has a number",
                                                    },
                                                    Object {
                                                      "additionalArguments": 2,
                                                      "type": "has_number_between",
                                                      "verboseName": "has a number between",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_lt",
                                                      "verboseName": "has a number below",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_lte",
                                                      "verboseName": "has a number at or below",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_eq",
                                                      "verboseName": "has a number equal to",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_gte",
                                                      "verboseName": "has a number at or above",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_gt",
                                                      "verboseName": "has a number above",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Phone",
                                                      "type": "has_phone",
                                                      "verboseName": "has a phone number",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Not Empty",
                                                      "type": "has_value",
                                                      "verboseName": "is not empty",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Attachment",
                                                      "initialArgument": "@input.attachments",
                                                      "type": "has_attachment",
                                                      "verboseName": "has an attachment",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_pattern",
                                                      "verboseName": "matches regex",
                                                    },
                                                  ]
                                                }
                                                pageSize={5}
                                                placeholder="Select..."
                                                screenReaderStatus={[Function]}
                                                styles={
                                                  Object {
                                                    "control": [Function],
                                                    "indicatorsContainer": [Function],
                                                    "input": [Function],
                                                    "menuList": [Function],
                                                    "option": [Function],
                                                    "singleValue": [Function],
                                                    "valueContainer": [Function],
                                                  }
                                                }
                                                tabIndex="0"
                                                tabSelectsValue={true}
                                                value={
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_any_word",
                                                    "verboseName": "has any of the words",
                                                    "visibility": Array [
                                                      "messaging",
                                                      "messaging_offline",
                                                    ],
                                                  }
                                                }
                                              >
                                                <SelectContainer
                                                  className="select-base"
                                                  clearValue={[Function]}
                                                  cx={[Function]}
                                                  getStyles={[Function]}
                                                  getValue={[Function]}
                                                  hasValue={true}
                                                  innerProps={
                                                    Object {
                                                      "id": undefined,
                                                      "onKeyDown": [Function],
                                                    }
                                                  }
                                                  isDisabled={false}
                                                  isFocused={false}
                                                  isMulti={false}
                                                  isRtl={false}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_beginning",
                                                        "verboseName": "starts with",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Number",
                                                        "type": "has_number",
                                                        "verboseName": "has a number",
                                                      },
                                                      Object {
                                                        "additionalArguments": 2,
                                                        "type": "has_number_between",
                                                        "verboseName": "has a number between",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_lt",
                                                        "verboseName": "has a number below",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_lte",
                                                        "verboseName": "has a number at or below",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_eq",
                                                        "verboseName": "has a number equal to",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_gte",
                                                        "verboseName": "has a number at or above",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_gt",
                                                        "verboseName": "has a number above",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Phone",
                                                        "type": "has_phone",
                                                        "verboseName": "has a phone number",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Not Empty",
                                                        "type": "has_value",
                                                        "verboseName": "is not empty",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Attachment",
                                                        "initialArgument": "@input.attachments",
                                                        "type": "has_attachment",
                                                        "verboseName": "has an attachment",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_pattern",
                                                        "verboseName": "matches regex",
                                                      },
                                                    ]
                                                  }
                                                  selectOption={[Function]}
                                                  selectProps={
                                                    Object {
                                                      "backspaceRemovesValue": true,
                                                      "blurInputOnSelect": true,
                                                      "captureMenuScroll": false,
                                                      "className": "select-base",
                                                      "closeMenuOnScroll": false,
                                                      "closeMenuOnSelect": true,
                                                      "components": Object {},
                                                      "controlShouldRenderValue": true,
                                                      "data-spec": "operator-list",
                                                      "defaultInputValue": "",
                                                      "defaultMenuIsOpen": false,
                                                      "defaultValue": null,
                                                      "escapeClearsValue": false,
                                                      "filterOption": [Function],
                                                      "formatGroupLabel": [Function],
                                                      "getOptionLabel": [Function],
                                                      "getOptionValue": [Function],
                                                      "inputValue": "",
                                                      "isClearable": false,
                                                      "isDisabled": false,
                                                      "isLoading": false,
                                                      "isMulti": false,
                                                      "isOptionDisabled": [Function],
                                                      "isRtl": false,
                                                      "isSearchable": false,
                                                      "loadingMessage": [Function],
                                                      "maxMenuHeight": 300,
                                                      "menuIsOpen": false,
                                                      "menuPlacement": "auto",
                                                      "menuPosition": "absolute",
                                                      "menuShouldBlockScroll": false,
                                                      "menuShouldScrollIntoView": true,
                                                      "minMenuHeight": 140,
                                                      "name": "operator",
                                                      "noOptionsMessage": [Function],
                                                      "onChange": [Function],
                                                      "onInputChange": [Function],
                                                      "onMenuClose": [Function],
                                                      "onMenuOpen": [Function],
                                                      "openMenuOnClick": true,
                                                      "openMenuOnFocus": false,
                                                      "options": Array [
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_beginning",
                                                          "verboseName": "starts with",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Number",
                                                          "type": "has_number",
                                                          "verboseName": "has a number",
                                                        },
                                                        Object {
                                                          "additionalArguments": 2,
                                                          "type": "has_number_between",
                                                          "verboseName": "has a number between",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_lt",
                                                          "verboseName": "has a number below",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_lte",
                                                          "verboseName": "has a number at or below",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_eq",
                                                          "verboseName": "has a number equal to",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_gte",
                                                          "verboseName": "has a number at or above",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_gt",
                                                          "verboseName": "has a number above",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Phone",
                                                          "type": "has_phone",
                                                          "verboseName": "has a phone number",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Not Empty",
                                                          "type": "has_value",
                                                          "verboseName": "is not empty",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Attachment",
                                                          "initialArgument": "@input.attachments",
                                                          "type": "has_attachment",
                                                          "verboseName": "has an attachment",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_pattern",
                                                          "verboseName": "matches regex",
                                                        },
                                                      ],
                                                      "pageSize": 5,
                                                      "placeholder": "Select...",
                                                      "screenReaderStatus": [Function],
                                                      "styles": Object {
                                                        "control": [Function],
                                                        "indicatorsContainer": [Function],
                                                        "input": [Function],
                                                        "menuList": [Function],
                                                        "option": [Function],
                                                        "singleValue": [Function],
                                                        "valueContainer": [Function],
                                                      },
                                                      "tabIndex": "0",
                                                      "tabSelectsValue": true,
                                                      "value": Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_any_word",
                                                        "verboseName": "has any of the words",
                                                        "visibility": Array [
                                                          "messaging",
                                                          "messaging_offline",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  setValue={[Function]}
                                                  theme={
                                                    Object {
                                                      "borderRadius": 4,
                                                      "colors": Object {
                                                        "danger": "#DE350B",
                                                        "dangerLight": "#FFBDAD",
                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                        "primary": "#2684FF",
                                                        "primary25": "#DEEBFF",
                                                        "primary50": "#B2D4FF",
                                                        "primary75": "#4C9AFF",
                                                      },
                                                      "spacing": Object {
                                                        "baseUnit": 4,
                                                        "controlHeight": 38,
                                                        "menuGutter": 8,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="css-10nd86i select-base"
                                                    onKeyDown={[Function]}
                                                  >
                                                    <Control
                                                      clearValue={[Function]}
                                                      cx={[Function]}
                                                      getStyles={[Function]}
                                                      getValue={[Function]}
                                                      hasValue={true}
                                                      innerProps={
                                                        Object {
                                                          "onMouseDown": [Function],
                                                          "onTouchEnd": [Function],
                                                        }
                                                      }
                                                      innerRef={[Function]}
                                                      isDisabled={false}
                                                      isFocused={false}
                                                      isMulti={false}
                                                      isRtl={false}
                                                      menuIsOpen={false}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_beginning",
                                                            "verboseName": "starts with",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Number",
                                                            "type": "has_number",
                                                            "verboseName": "has a number",
                                                          },
                                                          Object {
                                                            "additionalArguments": 2,
                                                            "type": "has_number_between",
                                                            "verboseName": "has a number between",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_lt",
                                                            "verboseName": "has a number below",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_lte",
                                                            "verboseName": "has a number at or below",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_eq",
                                                            "verboseName": "has a number equal to",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_gte",
                                                            "verboseName": "has a number at or above",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_gt",
                                                            "verboseName": "has a number above",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Phone",
                                                            "type": "has_phone",
                                                            "verboseName": "has a phone number",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Not Empty",
                                                            "type": "has_value",
                                                            "verboseName": "is not empty",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Attachment",
                                                            "initialArgument": "@input.attachments",
                                                            "type": "has_attachment",
                                                            "verboseName": "has an attachment",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_pattern",
                                                            "verboseName": "matches regex",
                                                          },
                                                        ]
                                                      }
                                                      selectOption={[Function]}
                                                      selectProps={
                                                        Object {
                                                          "backspaceRemovesValue": true,
                                                          "blurInputOnSelect": true,
                                                          "captureMenuScroll": false,
                                                          "className": "select-base",
                                                          "closeMenuOnScroll": false,
                                                          "closeMenuOnSelect": true,
                                                          "components": Object {},
                                                          "controlShouldRenderValue": true,
                                                          "data-spec": "operator-list",
                                                          "defaultInputValue": "",
                                                          "defaultMenuIsOpen": false,
                                                          "defaultValue": null,
                                                          "escapeClearsValue": false,
                                                          "filterOption": [Function],
                                                          "formatGroupLabel": [Function],
                                                          "getOptionLabel": [Function],
                                                          "getOptionValue": [Function],
                                                          "inputValue": "",
                                                          "isClearable": false,
                                                          "isDisabled": false,
                                                          "isLoading": false,
                                                          "isMulti": false,
                                                          "isOptionDisabled": [Function],
                                                          "isRtl": false,
                                                          "isSearchable": false,
                                                          "loadingMessage": [Function],
                                                          "maxMenuHeight": 300,
                                                          "menuIsOpen": false,
                                                          "menuPlacement": "auto",
                                                          "menuPosition": "absolute",
                                                          "menuShouldBlockScroll": false,
                                                          "menuShouldScrollIntoView": true,
                                                          "minMenuHeight": 140,
                                                          "name": "operator",
                                                          "noOptionsMessage": [Function],
                                                          "onChange": [Function],
                                                          "onInputChange": [Function],
                                                          "onMenuClose": [Function],
                                                          "onMenuOpen": [Function],
                                                          "openMenuOnClick": true,
                                                          "openMenuOnFocus": false,
                                                          "options": Array [
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_beginning",
                                                              "verboseName": "starts with",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Number",
                                                              "type": "has_number",
                                                              "verboseName": "has a number",
                                                            },
                                                            Object {
                                                              "additionalArguments": 2,
                                                              "type": "has_number_between",
                                                              "verboseName": "has a number between",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_lt",
                                                              "verboseName": "has a number below",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_lte",
                                                              "verboseName": "has a number at or below",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_eq",
                                                              "verboseName": "has a number equal to",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_gte",
                                                              "verboseName": "has a number at or above",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_gt",
                                                              "verboseName": "has a number above",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Phone",
                                                              "type": "has_phone",
                                                              "verboseName": "has a phone number",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Not Empty",
                                                              "type": "has_value",
                                                              "verboseName": "is not empty",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Attachment",
                                                              "initialArgument": "@input.attachments",
                                                              "type": "has_attachment",
                                                              "verboseName": "has an attachment",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_pattern",
                                                              "verboseName": "matches regex",
                                                            },
                                                          ],
                                                          "pageSize": 5,
                                                          "placeholder": "Select...",
                                                          "screenReaderStatus": [Function],
                                                          "styles": Object {
                                                            "control": [Function],
                                                            "indicatorsContainer": [Function],
                                                            "input": [Function],
                                                            "menuList": [Function],
                                                            "option": [Function],
                                                            "singleValue": [Function],
                                                            "valueContainer": [Function],
                                                          },
                                                          "tabIndex": "0",
                                                          "tabSelectsValue": true,
                                                          "value": Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_any_word",
                                                            "verboseName": "has any of the words",
                                                            "visibility": Array [
                                                              "messaging",
                                                              "messaging_offline",
                                                            ],
                                                          },
                                                        }
                                                      }
                                                      setValue={[Function]}
                                                      theme={
                                                        Object {
                                                          "borderRadius": 4,
                                                          "colors": Object {
                                                            "danger": "#DE350B",
                                                            "dangerLight": "#FFBDAD",
                                                            "neutral0": "hsl(0, 0%, 100%)",
                                                            "neutral10": "hsl(0, 0%, 90%)",
                                                            "neutral20": "hsl(0, 0%, 80%)",
                                                            "neutral30": "hsl(0, 0%, 70%)",
                                                            "neutral40": "hsl(0, 0%, 60%)",
                                                            "neutral5": "hsl(0, 0%, 95%)",
                                                            "neutral50": "hsl(0, 0%, 50%)",
                                                            "neutral60": "hsl(0, 0%, 40%)",
                                                            "neutral70": "hsl(0, 0%, 30%)",
                                                            "neutral80": "hsl(0, 0%, 20%)",
                                                            "neutral90": "hsl(0, 0%, 10%)",
                                                            "primary": "#2684FF",
                                                            "primary25": "#DEEBFF",
                                                            "primary50": "#B2D4FF",
                                                            "primary75": "#4C9AFF",
                                                          },
                                                          "spacing": Object {
                                                            "baseUnit": 4,
                                                            "controlHeight": 38,
                                                            "menuGutter": 8,
                                                          },
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="css-1vpc3wb"
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                      >
                                                        <ValueContainer
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          isDisabled={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_beginning",
                                                                "verboseName": "starts with",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Number",
                                                                "type": "has_number",
                                                                "verboseName": "has a number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 2,
                                                                "type": "has_number_between",
                                                                "verboseName": "has a number between",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lt",
                                                                "verboseName": "has a number below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lte",
                                                                "verboseName": "has a number at or below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_eq",
                                                                "verboseName": "has a number equal to",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gte",
                                                                "verboseName": "has a number at or above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gt",
                                                                "verboseName": "has a number above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Phone",
                                                                "type": "has_phone",
                                                                "verboseName": "has a phone number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Not Empty",
                                                                "type": "has_value",
                                                                "verboseName": "is not empty",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Attachment",
                                                                "initialArgument": "@input.attachments",
                                                                "type": "has_attachment",
                                                                "verboseName": "has an attachment",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_pattern",
                                                                "verboseName": "matches regex",
                                                              },
                                                            ]
                                                          }
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "select-base",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {},
                                                              "controlShouldRenderValue": true,
                                                              "data-spec": "operator-list",
                                                              "defaultInputValue": "",
                                                              "defaultMenuIsOpen": false,
                                                              "defaultValue": null,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "inputValue": "",
                                                              "isClearable": false,
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "auto",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "operator",
                                                              "noOptionsMessage": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_beginning",
                                                                  "verboseName": "starts with",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Number",
                                                                  "type": "has_number",
                                                                  "verboseName": "has a number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 2,
                                                                  "type": "has_number_between",
                                                                  "verboseName": "has a number between",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lt",
                                                                  "verboseName": "has a number below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lte",
                                                                  "verboseName": "has a number at or below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_eq",
                                                                  "verboseName": "has a number equal to",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gte",
                                                                  "verboseName": "has a number at or above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gt",
                                                                  "verboseName": "has a number above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Phone",
                                                                  "type": "has_phone",
                                                                  "verboseName": "has a phone number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Not Empty",
                                                                  "type": "has_value",
                                                                  "verboseName": "is not empty",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Attachment",
                                                                  "initialArgument": "@input.attachments",
                                                                  "type": "has_attachment",
                                                                  "verboseName": "has an attachment",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_pattern",
                                                                  "verboseName": "matches regex",
                                                                },
                                                              ],
                                                              "pageSize": 5,
                                                              "placeholder": "Select...",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {
                                                                "control": [Function],
                                                                "indicatorsContainer": [Function],
                                                                "input": [Function],
                                                                "menuList": [Function],
                                                                "option": [Function],
                                                                "singleValue": [Function],
                                                                "valueContainer": [Function],
                                                              },
                                                              "tabIndex": "0",
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_any_word",
                                                                "verboseName": "has any of the words",
                                                                "visibility": Array [
                                                                  "messaging",
                                                                  "messaging_offline",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="css-c2yhe2"
                                                          >
                                                            <SingleValue
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              data={
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_any_word",
                                                                  "verboseName": "has any of the words",
                                                                  "visibility": Array [
                                                                    "messaging",
                                                                    "messaging_offline",
                                                                  ],
                                                                }
                                                              }
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              isDisabled={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="css-16k2dzr"
                                                              >
                                                                has any of the words
                                                              </div>
                                                            </SingleValue>
                                                            <DummyInput
                                                              disabled={false}
                                                              id="react-select-3-input"
                                                              innerRef={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              readOnly={true}
                                                              tabIndex="0"
                                                              value=""
                                                            >
                                                              <input
                                                                className="css-14uuagi"
                                                                disabled={false}
                                                                id="react-select-3-input"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                readOnly={true}
                                                                tabIndex="0"
                                                                value=""
                                                              />
                                                            </DummyInput>
                                                          </div>
                                                        </ValueContainer>
                                                        <IndicatorsContainer
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          isDisabled={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_beginning",
                                                                "verboseName": "starts with",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Number",
                                                                "type": "has_number",
                                                                "verboseName": "has a number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 2,
                                                                "type": "has_number_between",
                                                                "verboseName": "has a number between",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lt",
                                                                "verboseName": "has a number below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lte",
                                                                "verboseName": "has a number at or below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_eq",
                                                                "verboseName": "has a number equal to",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gte",
                                                                "verboseName": "has a number at or above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gt",
                                                                "verboseName": "has a number above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Phone",
                                                                "type": "has_phone",
                                                                "verboseName": "has a phone number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Not Empty",
                                                                "type": "has_value",
                                                                "verboseName": "is not empty",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Attachment",
                                                                "initialArgument": "@input.attachments",
                                                                "type": "has_attachment",
                                                                "verboseName": "has an attachment",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_pattern",
                                                                "verboseName": "matches regex",
                                                              },
                                                            ]
                                                          }
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "select-base",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {},
                                                              "controlShouldRenderValue": true,
                                                              "data-spec": "operator-list",
                                                              "defaultInputValue": "",
                                                              "defaultMenuIsOpen": false,
                                                              "defaultValue": null,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "inputValue": "",
                                                              "isClearable": false,
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "auto",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "operator",
                                                              "noOptionsMessage": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_beginning",
                                                                  "verboseName": "starts with",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Number",
                                                                  "type": "has_number",
                                                                  "verboseName": "has a number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 2,
                                                                  "type": "has_number_between",
                                                                  "verboseName": "has a number between",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lt",
                                                                  "verboseName": "has a number below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lte",
                                                                  "verboseName": "has a number at or below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_eq",
                                                                  "verboseName": "has a number equal to",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gte",
                                                                  "verboseName": "has a number at or above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gt",
                                                                  "verboseName": "has a number above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Phone",
                                                                  "type": "has_phone",
                                                                  "verboseName": "has a phone number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Not Empty",
                                                                  "type": "has_value",
                                                                  "verboseName": "is not empty",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Attachment",
                                                                  "initialArgument": "@input.attachments",
                                                                  "type": "has_attachment",
                                                                  "verboseName": "has an attachment",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_pattern",
                                                                  "verboseName": "matches regex",
                                                                },
                                                              ],
                                                              "pageSize": 5,
                                                              "placeholder": "Select...",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {
                                                                "control": [Function],
                                                                "indicatorsContainer": [Function],
                                                                "input": [Function],
                                                                "menuList": [Function],
                                                                "option": [Function],
                                                                "singleValue": [Function],
                                                                "valueContainer": [Function],
                                                              },
                                                              "tabIndex": "0",
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_any_word",
                                                                "verboseName": "has any of the words",
                                                                "visibility": Array [
                                                                  "messaging",
                                                                  "messaging_offline",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="css-1l76mts"
                                                          >
                                                            <IndicatorSeparator
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              isDisabled={false}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="css-d8oujb"
                                                              />
                                                            </IndicatorSeparator>
                                                            <DropdownIndicator
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              innerProps={
                                                                Object {
                                                                  "aria-hidden": "true",
                                                                  "onMouseDown": [Function],
                                                                  "onTouchEnd": [Function],
                                                                }
                                                              }
                                                              isDisabled={false}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                aria-hidden="true"
                                                                className="css-1ep9fjw"
                                                                onMouseDown={[Function]}
                                                                onTouchEnd={[Function]}
                                                              >
                                                                <DownChevron>
                                                                  <Svg
                                                                    size={20}
                                                                  >
                                                                    <svg
                                                                      aria-hidden="true"
                                                                      className="css-19bqh2r"
                                                                      focusable="false"
                                                                      height={20}
                                                                      viewBox="0 0 20 20"
                                                                      width={20}
                                                                    >
                                                                      <path
                                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                                      />
                                                                    </svg>
                                                                  </Svg>
                                                                </DownChevron>
                                                              </div>
                                                            </DropdownIndicator>
                                                          </div>
                                                        </IndicatorsContainer>
                                                      </div>
                                                    </Control>
                                                    <input
                                                      name="operator"
                                                      type="hidden"
                                                      value="has_any_word"
                                                    />
                                                  </div>
                                                </SelectContainer>
                                              </Select>
                                            </StateManager>
                                          </div>
                                          <div
                                            className="singleOperand"
                                          >
                                            <Connect(TextInputElement)
                                              autocomplete={true}
                                              data-spec="args-input"
                                              entry={
                                                Object {
                                                  "persistantFailures": Array [],
                                                  "value": "Red, r",
                                                }
                                              }
                                              name="arguments"
                                              onChange={[Function]}
                                              onFieldFailures={[Function]}
                                            >
                                              <TextInputElement
                                                assetStore={Object {}}
                                                autocomplete={true}
                                                data-spec="args-input"
                                                dispatch={[Function]}
                                                entry={
                                                  Object {
                                                    "persistantFailures": Array [],
                                                    "value": "Red, r",
                                                  }
                                                }
                                                name="arguments"
                                                onChange={[Function]}
                                                onFieldFailures={[Function]}
                                                typeConfig={null}
                                              >
                                                <FormElement
                                                  entry={
                                                    Object {
                                                      "persistantFailures": Array [],
                                                      "value": "Red, r",
                                                    }
                                                  }
                                                  name="arguments"
                                                  sendMsgError={false}
                                                >
                                                  <div
                                                    className="ele"
                                                  >
                                                    <div
                                                      className="wrapper"
                                                    >
                                                      <input
                                                        className="textinput"
                                                        data-spec="input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        type="text"
                                                        value="Red, r"
                                                      />
                                                      <div
                                                        className="completionContainer hidden"
                                                        data-spec="completion-options"
                                                        style={
                                                          Object {
                                                            "left": 0,
                                                            "top": 0,
                                                          }
                                                        }
                                                      >
                                                        <ul
                                                          className="option_list"
                                                          data-spec="completion-list"
                                                        />
                                                        <div
                                                          className="help"
                                                          data-spec="completion-help"
                                                        >
                                                          Tab to complete, enter to select
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </FormElement>
                                              </TextInputElement>
                                            </Connect(TextInputElement)>
                                          </div>
                                          <div
                                            className="categorizeAs"
                                          >
                                            categorize as
                                          </div>
                                          <div
                                            className="category"
                                          >
                                            <Connect(TextInputElement)
                                              data-spec="exit-input"
                                              entry={
                                                Object {
                                                  "value": "Red",
                                                }
                                              }
                                              name="exitName"
                                              onChange={[Function]}
                                              showInvalid={false}
                                            >
                                              <TextInputElement
                                                assetStore={Object {}}
                                                data-spec="exit-input"
                                                dispatch={[Function]}
                                                entry={
                                                  Object {
                                                    "value": "Red",
                                                  }
                                                }
                                                name="exitName"
                                                onChange={[Function]}
                                                showInvalid={false}
                                                typeConfig={null}
                                              >
                                                <FormElement
                                                  entry={
                                                    Object {
                                                      "value": "Red",
                                                    }
                                                  }
                                                  name="exitName"
                                                  sendMsgError={false}
                                                >
                                                  <div
                                                    className="ele"
                                                  >
                                                    <div
                                                      className="wrapper"
                                                    >
                                                      <input
                                                        className="textinput"
                                                        data-spec="input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        type="text"
                                                        value="Red"
                                                      />
                                                      <div
                                                        className="completionContainer hidden"
                                                        data-spec="completion-options"
                                                        style={
                                                          Object {
                                                            "left": 0,
                                                            "top": 0,
                                                          }
                                                        }
                                                      >
                                                        <ul
                                                          className="option_list"
                                                          data-spec="completion-list"
                                                        />
                                                        <div
                                                          className="help"
                                                          data-spec="completion-help"
                                                        >
                                                          Tab to complete, enter to select
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </FormElement>
                                              </TextInputElement>
                                            </Connect(TextInputElement)>
                                          </div>
                                          <span
                                            className="fe-x removeIcon"
                                            onClick={[Function]}
                                          />
                                        </div>
                                      </div>
                                    </FormElement>
                                  </CaseElement>
                                </div>
                              </div>
                            </DragHandle>
                          </Motion>
                        </Movable>
                      </DraggableDimensionPublisher>
                    </Connect(DraggableDimensionPublisher)>
                  </Draggable>
                </Connect(Draggable)>
                <Connect(Draggable)
                  draggableId="061fc171-8b79-4636-b892-bd0ea5aa9b42"
                  isDragDisabled={false}
                  key="061fc171-8b79-4636-b892-bd0ea5aa9b42"
                >
                  <Draggable
                    canAnimate={false}
                    canLift={true}
                    cancel={[Function]}
                    crossAxisMoveBackward={[Function]}
                    crossAxisMoveForward={[Function]}
                    dimension={null}
                    direction={null}
                    disableInteractiveElementBlocking={false}
                    draggableId="061fc171-8b79-4636-b892-bd0ea5aa9b42"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    isDragDisabled={false}
                    isDragging={false}
                    isDropAnimating={false}
                    lift={[Function]}
                    move={[Function]}
                    moveBackward={[Function]}
                    moveByWindowScroll={[Function]}
                    moveForward={[Function]}
                    offset={
                      Object {
                        "x": 0,
                        "y": 0,
                      }
                    }
                    type="DEFAULT"
                  >
                    <Connect(DraggableDimensionPublisher)
                      draggableId="061fc171-8b79-4636-b892-bd0ea5aa9b42"
                      droppableId="droppable"
                      targetRef={
                        <div
                          aria-grabbed="false"
                          draggable="false"
                          style="user-select: none; outline: none; pointer-events: auto;"
                          tabindex="0"
                        >
                          <div
                            class="ele group"
                          >
                            <div
                              class="kase"
                            >
                              <span
                                class="fe-chevrons-expand dndIcon"
                              />
                              <div
                                class="choice select-medium"
                              >
                                <div
                                  class="css-10nd86i select-base"
                                >
                                  <div
                                    class="css-1vpc3wb"
                                  >
                                    <div
                                      class="css-c2yhe2"
                                    >
                                      <div
                                        class="css-16k2dzr"
                                      >
                                        has any of the words
                                      </div>
                                      <input
                                        class="css-14uuagi"
                                        id="react-select-4-input"
                                        readonly=""
                                        tabindex="0"
                                        value=""
                                      />
                                    </div>
                                    <div
                                      class="css-1l76mts"
                                    >
                                      <span
                                        class="css-d8oujb"
                                      />
                                      <div
                                        aria-hidden="true"
                                        class="css-1ep9fjw"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="css-19bqh2r"
                                          focusable="false"
                                          height="20"
                                          viewBox="0 0 20 20"
                                          width="20"
                                        >
                                          <path
                                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  </div>
                                  <input
                                    name="operator"
                                    type="hidden"
                                    value="has_any_word"
                                  />
                                </div>
                              </div>
                              <div
                                class="singleOperand"
                              >
                                <div
                                  class="ele"
                                >
                                  <div
                                    class="wrapper"
                                  >
                                    <input
                                      class="textinput"
                                      data-spec="input"
                                      type="text"
                                      value="Green, g"
                                    />
                                    <div
                                      class="completionContainer hidden"
                                      data-spec="completion-options"
                                      style="top: 0px; left: 0px;"
                                    >
                                      <ul
                                        class="option_list"
                                        data-spec="completion-list"
                                      />
                                      <div
                                        class="help"
                                        data-spec="completion-help"
                                      >
                                        Tab to complete, enter to select
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <div
                                class="categorizeAs"
                              >
                                categorize as
                              </div>
                              <div
                                class="category"
                              >
                                <div
                                  class="ele"
                                >
                                  <div
                                    class="wrapper"
                                  >
                                    <input
                                      class="textinput"
                                      data-spec="input"
                                      type="text"
                                      value="Green"
                                    />
                                    <div
                                      class="completionContainer hidden"
                                      data-spec="completion-options"
                                      style="top: 0px; left: 0px;"
                                    >
                                      <ul
                                        class="option_list"
                                        data-spec="completion-list"
                                      />
                                      <div
                                        class="help"
                                        data-spec="completion-help"
                                      >
                                        Tab to complete, enter to select
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <span
                                class="fe-x removeIcon"
                              />
                            </div>
                          </div>
                        </div>
                      }
                      type="DEFAULT"
                    >
                      <DraggableDimensionPublisher
                        draggableId="061fc171-8b79-4636-b892-bd0ea5aa9b42"
                        droppableId="droppable"
                        publish={[Function]}
                        shouldPublish={false}
                        targetRef={
                          <div
                            aria-grabbed="false"
                            draggable="false"
                            style="user-select: none; outline: none; pointer-events: auto;"
                            tabindex="0"
                          >
                            <div
                              class="ele group"
                            >
                              <div
                                class="kase"
                              >
                                <span
                                  class="fe-chevrons-expand dndIcon"
                                />
                                <div
                                  class="choice select-medium"
                                >
                                  <div
                                    class="css-10nd86i select-base"
                                  >
                                    <div
                                      class="css-1vpc3wb"
                                    >
                                      <div
                                        class="css-c2yhe2"
                                      >
                                        <div
                                          class="css-16k2dzr"
                                        >
                                          has any of the words
                                        </div>
                                        <input
                                          class="css-14uuagi"
                                          id="react-select-4-input"
                                          readonly=""
                                          tabindex="0"
                                          value=""
                                        />
                                      </div>
                                      <div
                                        class="css-1l76mts"
                                      >
                                        <span
                                          class="css-d8oujb"
                                        />
                                        <div
                                          aria-hidden="true"
                                          class="css-1ep9fjw"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="css-19bqh2r"
                                            focusable="false"
                                            height="20"
                                            viewBox="0 0 20 20"
                                            width="20"
                                          >
                                            <path
                                              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                            />
                                          </svg>
                                        </div>
                                      </div>
                                    </div>
                                    <input
                                      name="operator"
                                      type="hidden"
                                      value="has_any_word"
                                    />
                                  </div>
                                </div>
                                <div
                                  class="singleOperand"
                                >
                                  <div
                                    class="ele"
                                  >
                                    <div
                                      class="wrapper"
                                    >
                                      <input
                                        class="textinput"
                                        data-spec="input"
                                        type="text"
                                        value="Green, g"
                                      />
                                      <div
                                        class="completionContainer hidden"
                                        data-spec="completion-options"
                                        style="top: 0px; left: 0px;"
                                      >
                                        <ul
                                          class="option_list"
                                          data-spec="completion-list"
                                        />
                                        <div
                                          class="help"
                                          data-spec="completion-help"
                                        >
                                          Tab to complete, enter to select
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  class="categorizeAs"
                                >
                                  categorize as
                                </div>
                                <div
                                  class="category"
                                >
                                  <div
                                    class="ele"
                                  >
                                    <div
                                      class="wrapper"
                                    >
                                      <input
                                        class="textinput"
                                        data-spec="input"
                                        type="text"
                                        value="Green"
                                      />
                                      <div
                                        class="completionContainer hidden"
                                        data-spec="completion-options"
                                        style="top: 0px; left: 0px;"
                                      >
                                        <ul
                                          class="option_list"
                                          data-spec="completion-list"
                                        />
                                        <div
                                          class="help"
                                          data-spec="completion-help"
                                        >
                                          Tab to complete, enter to select
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <span
                                  class="fe-x removeIcon"
                                />
                              </div>
                            </div>
                          </div>
                        }
                        type="DEFAULT"
                      >
                        <Movable
                          destination={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          onMoveEnd={[Function]}
                          speed="INSTANT"
                        >
                          <Motion
                            defaultStyle={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            onRest={[Function]}
                            style={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                          >
                            <DragHandle
                              callbacks={
                                Object {
                                  "onCancel": [Function],
                                  "onCrossAxisMoveBackward": [Function],
                                  "onCrossAxisMoveForward": [Function],
                                  "onDrop": [Function],
                                  "onLift": [Function],
                                  "onMove": [Function],
                                  "onMoveBackward": [Function],
                                  "onMoveForward": [Function],
                                  "onWindowScroll": [Function],
                                }
                              }
                              canDragInteractiveElements={false}
                              canLift={true}
                              direction={null}
                              getDraggableRef={[Function]}
                              isDragging={false}
                              isEnabled={true}
                            >
                              <div
                                data-spec="case-draggable"
                              >
                                <div
                                  aria-grabbed={false}
                                  draggable={false}
                                  onClick={[Function]}
                                  onDragStart={[Function]}
                                  onDrop={[Function]}
                                  onKeyDown={[Function]}
                                  onMouseDown={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  style={
                                    Object {
                                      "WebkitTapHighlightColor": "rgba(0,0,0,0)",
                                      "WebkitTouchCallout": "none",
                                      "outline": "none",
                                      "pointerEvents": "auto",
                                      "touchAction": "manipulation",
                                      "transform": null,
                                      "transition": null,
                                      "userSelect": "none",
                                    }
                                  }
                                  tabIndex={0}
                                >
                                  <CaseElement
                                    categoryName="Green"
                                    kase={
                                      Object {
                                        "arguments": Array [
                                          "Green, g",
                                        ],
                                        "category_uuid": "38c1m4g4-b424-585d-8cgi-384d6260ymca",
                                        "type": "has_any_word",
                                        "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
                                      }
                                    }
                                    key="061fc171-8b79-4636-b892-bd0ea5aa9b42"
                                    onChange={[Function]}
                                    onRemove={[Function]}
                                    uuid="061fc171-8b79-4636-b892-bd0ea5aa9b42"
                                    valid={true}
                                  >
                                    <FormElement
                                      __className="group"
                                      data-spec="case-form"
                                      kaseError={false}
                                    >
                                      <div
                                        className="ele group"
                                      >
                                        <div
                                          className="kase"
                                        >
                                          <span
                                            className="fe-chevrons-expand dndIcon"
                                          />
                                          <div
                                            className="choice select-medium"
                                          >
                                            <StateManager
                                              className="select-base"
                                              data-spec="operator-list"
                                              defaultInputValue=""
                                              defaultMenuIsOpen={false}
                                              defaultValue={null}
                                              getOptionLabel={[Function]}
                                              getOptionValue={[Function]}
                                              isClearable={false}
                                              isSearchable={false}
                                              menuPlacement="auto"
                                              name="operator"
                                              onChange={[Function]}
                                              options={
                                                Array [
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_beginning",
                                                    "verboseName": "starts with",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Number",
                                                    "type": "has_number",
                                                    "verboseName": "has a number",
                                                  },
                                                  Object {
                                                    "additionalArguments": 2,
                                                    "type": "has_number_between",
                                                    "verboseName": "has a number between",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_lt",
                                                    "verboseName": "has a number below",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_lte",
                                                    "verboseName": "has a number at or below",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_eq",
                                                    "verboseName": "has a number equal to",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_gte",
                                                    "verboseName": "has a number at or above",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_gt",
                                                    "verboseName": "has a number above",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Phone",
                                                    "type": "has_phone",
                                                    "verboseName": "has a phone number",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Not Empty",
                                                    "type": "has_value",
                                                    "verboseName": "is not empty",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Attachment",
                                                    "initialArgument": "@input.attachments",
                                                    "type": "has_attachment",
                                                    "verboseName": "has an attachment",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_pattern",
                                                    "verboseName": "matches regex",
                                                  },
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "control": [Function],
                                                  "indicatorsContainer": [Function],
                                                  "input": [Function],
                                                  "menuList": [Function],
                                                  "option": [Function],
                                                  "singleValue": [Function],
                                                  "valueContainer": [Function],
                                                }
                                              }
                                              value={
                                                Object {
                                                  "additionalArguments": 1,
                                                  "type": "has_any_word",
                                                  "verboseName": "has any of the words",
                                                  "visibility": Array [
                                                    "messaging",
                                                    "messaging_offline",
                                                  ],
                                                }
                                              }
                                            >
                                              <Select
                                                backspaceRemovesValue={true}
                                                blurInputOnSelect={true}
                                                captureMenuScroll={false}
                                                className="select-base"
                                                closeMenuOnScroll={false}
                                                closeMenuOnSelect={true}
                                                components={Object {}}
                                                controlShouldRenderValue={true}
                                                data-spec="operator-list"
                                                defaultInputValue=""
                                                defaultMenuIsOpen={false}
                                                defaultValue={null}
                                                escapeClearsValue={false}
                                                filterOption={[Function]}
                                                formatGroupLabel={[Function]}
                                                getOptionLabel={[Function]}
                                                getOptionValue={[Function]}
                                                inputValue=""
                                                isClearable={false}
                                                isDisabled={false}
                                                isLoading={false}
                                                isMulti={false}
                                                isOptionDisabled={[Function]}
                                                isRtl={false}
                                                isSearchable={false}
                                                loadingMessage={[Function]}
                                                maxMenuHeight={300}
                                                menuIsOpen={false}
                                                menuPlacement="auto"
                                                menuPosition="absolute"
                                                menuShouldBlockScroll={false}
                                                menuShouldScrollIntoView={true}
                                                minMenuHeight={140}
                                                name="operator"
                                                noOptionsMessage={[Function]}
                                                onChange={[Function]}
                                                onInputChange={[Function]}
                                                onMenuClose={[Function]}
                                                onMenuOpen={[Function]}
                                                openMenuOnClick={true}
                                                openMenuOnFocus={false}
                                                options={
                                                  Array [
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_beginning",
                                                      "verboseName": "starts with",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Number",
                                                      "type": "has_number",
                                                      "verboseName": "has a number",
                                                    },
                                                    Object {
                                                      "additionalArguments": 2,
                                                      "type": "has_number_between",
                                                      "verboseName": "has a number between",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_lt",
                                                      "verboseName": "has a number below",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_lte",
                                                      "verboseName": "has a number at or below",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_eq",
                                                      "verboseName": "has a number equal to",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_gte",
                                                      "verboseName": "has a number at or above",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_gt",
                                                      "verboseName": "has a number above",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Phone",
                                                      "type": "has_phone",
                                                      "verboseName": "has a phone number",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Not Empty",
                                                      "type": "has_value",
                                                      "verboseName": "is not empty",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Attachment",
                                                      "initialArgument": "@input.attachments",
                                                      "type": "has_attachment",
                                                      "verboseName": "has an attachment",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_pattern",
                                                      "verboseName": "matches regex",
                                                    },
                                                  ]
                                                }
                                                pageSize={5}
                                                placeholder="Select..."
                                                screenReaderStatus={[Function]}
                                                styles={
                                                  Object {
                                                    "control": [Function],
                                                    "indicatorsContainer": [Function],
                                                    "input": [Function],
                                                    "menuList": [Function],
                                                    "option": [Function],
                                                    "singleValue": [Function],
                                                    "valueContainer": [Function],
                                                  }
                                                }
                                                tabIndex="0"
                                                tabSelectsValue={true}
                                                value={
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_any_word",
                                                    "verboseName": "has any of the words",
                                                    "visibility": Array [
                                                      "messaging",
                                                      "messaging_offline",
                                                    ],
                                                  }
                                                }
                                              >
                                                <SelectContainer
                                                  className="select-base"
                                                  clearValue={[Function]}
                                                  cx={[Function]}
                                                  getStyles={[Function]}
                                                  getValue={[Function]}
                                                  hasValue={true}
                                                  innerProps={
                                                    Object {
                                                      "id": undefined,
                                                      "onKeyDown": [Function],
                                                    }
                                                  }
                                                  isDisabled={false}
                                                  isFocused={false}
                                                  isMulti={false}
                                                  isRtl={false}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_beginning",
                                                        "verboseName": "starts with",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Number",
                                                        "type": "has_number",
                                                        "verboseName": "has a number",
                                                      },
                                                      Object {
                                                        "additionalArguments": 2,
                                                        "type": "has_number_between",
                                                        "verboseName": "has a number between",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_lt",
                                                        "verboseName": "has a number below",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_lte",
                                                        "verboseName": "has a number at or below",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_eq",
                                                        "verboseName": "has a number equal to",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_gte",
                                                        "verboseName": "has a number at or above",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_gt",
                                                        "verboseName": "has a number above",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Phone",
                                                        "type": "has_phone",
                                                        "verboseName": "has a phone number",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Not Empty",
                                                        "type": "has_value",
                                                        "verboseName": "is not empty",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Attachment",
                                                        "initialArgument": "@input.attachments",
                                                        "type": "has_attachment",
                                                        "verboseName": "has an attachment",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_pattern",
                                                        "verboseName": "matches regex",
                                                      },
                                                    ]
                                                  }
                                                  selectOption={[Function]}
                                                  selectProps={
                                                    Object {
                                                      "backspaceRemovesValue": true,
                                                      "blurInputOnSelect": true,
                                                      "captureMenuScroll": false,
                                                      "className": "select-base",
                                                      "closeMenuOnScroll": false,
                                                      "closeMenuOnSelect": true,
                                                      "components": Object {},
                                                      "controlShouldRenderValue": true,
                                                      "data-spec": "operator-list",
                                                      "defaultInputValue": "",
                                                      "defaultMenuIsOpen": false,
                                                      "defaultValue": null,
                                                      "escapeClearsValue": false,
                                                      "filterOption": [Function],
                                                      "formatGroupLabel": [Function],
                                                      "getOptionLabel": [Function],
                                                      "getOptionValue": [Function],
                                                      "inputValue": "",
                                                      "isClearable": false,
                                                      "isDisabled": false,
                                                      "isLoading": false,
                                                      "isMulti": false,
                                                      "isOptionDisabled": [Function],
                                                      "isRtl": false,
                                                      "isSearchable": false,
                                                      "loadingMessage": [Function],
                                                      "maxMenuHeight": 300,
                                                      "menuIsOpen": false,
                                                      "menuPlacement": "auto",
                                                      "menuPosition": "absolute",
                                                      "menuShouldBlockScroll": false,
                                                      "menuShouldScrollIntoView": true,
                                                      "minMenuHeight": 140,
                                                      "name": "operator",
                                                      "noOptionsMessage": [Function],
                                                      "onChange": [Function],
                                                      "onInputChange": [Function],
                                                      "onMenuClose": [Function],
                                                      "onMenuOpen": [Function],
                                                      "openMenuOnClick": true,
                                                      "openMenuOnFocus": false,
                                                      "options": Array [
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_beginning",
                                                          "verboseName": "starts with",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Number",
                                                          "type": "has_number",
                                                          "verboseName": "has a number",
                                                        },
                                                        Object {
                                                          "additionalArguments": 2,
                                                          "type": "has_number_between",
                                                          "verboseName": "has a number between",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_lt",
                                                          "verboseName": "has a number below",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_lte",
                                                          "verboseName": "has a number at or below",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_eq",
                                                          "verboseName": "has a number equal to",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_gte",
                                                          "verboseName": "has a number at or above",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_gt",
                                                          "verboseName": "has a number above",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Phone",
                                                          "type": "has_phone",
                                                          "verboseName": "has a phone number",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Not Empty",
                                                          "type": "has_value",
                                                          "verboseName": "is not empty",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Attachment",
                                                          "initialArgument": "@input.attachments",
                                                          "type": "has_attachment",
                                                          "verboseName": "has an attachment",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_pattern",
                                                          "verboseName": "matches regex",
                                                        },
                                                      ],
                                                      "pageSize": 5,
                                                      "placeholder": "Select...",
                                                      "screenReaderStatus": [Function],
                                                      "styles": Object {
                                                        "control": [Function],
                                                        "indicatorsContainer": [Function],
                                                        "input": [Function],
                                                        "menuList": [Function],
                                                        "option": [Function],
                                                        "singleValue": [Function],
                                                        "valueContainer": [Function],
                                                      },
                                                      "tabIndex": "0",
                                                      "tabSelectsValue": true,
                                                      "value": Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_any_word",
                                                        "verboseName": "has any of the words",
                                                        "visibility": Array [
                                                          "messaging",
                                                          "messaging_offline",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  setValue={[Function]}
                                                  theme={
                                                    Object {
                                                      "borderRadius": 4,
                                                      "colors": Object {
                                                        "danger": "#DE350B",
                                                        "dangerLight": "#FFBDAD",
                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                        "primary": "#2684FF",
                                                        "primary25": "#DEEBFF",
                                                        "primary50": "#B2D4FF",
                                                        "primary75": "#4C9AFF",
                                                      },
                                                      "spacing": Object {
                                                        "baseUnit": 4,
                                                        "controlHeight": 38,
                                                        "menuGutter": 8,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="css-10nd86i select-base"
                                                    onKeyDown={[Function]}
                                                  >
                                                    <Control
                                                      clearValue={[Function]}
                                                      cx={[Function]}
                                                      getStyles={[Function]}
                                                      getValue={[Function]}
                                                      hasValue={true}
                                                      innerProps={
                                                        Object {
                                                          "onMouseDown": [Function],
                                                          "onTouchEnd": [Function],
                                                        }
                                                      }
                                                      innerRef={[Function]}
                                                      isDisabled={false}
                                                      isFocused={false}
                                                      isMulti={false}
                                                      isRtl={false}
                                                      menuIsOpen={false}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_beginning",
                                                            "verboseName": "starts with",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Number",
                                                            "type": "has_number",
                                                            "verboseName": "has a number",
                                                          },
                                                          Object {
                                                            "additionalArguments": 2,
                                                            "type": "has_number_between",
                                                            "verboseName": "has a number between",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_lt",
                                                            "verboseName": "has a number below",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_lte",
                                                            "verboseName": "has a number at or below",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_eq",
                                                            "verboseName": "has a number equal to",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_gte",
                                                            "verboseName": "has a number at or above",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_gt",
                                                            "verboseName": "has a number above",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Phone",
                                                            "type": "has_phone",
                                                            "verboseName": "has a phone number",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Not Empty",
                                                            "type": "has_value",
                                                            "verboseName": "is not empty",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Attachment",
                                                            "initialArgument": "@input.attachments",
                                                            "type": "has_attachment",
                                                            "verboseName": "has an attachment",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_pattern",
                                                            "verboseName": "matches regex",
                                                          },
                                                        ]
                                                      }
                                                      selectOption={[Function]}
                                                      selectProps={
                                                        Object {
                                                          "backspaceRemovesValue": true,
                                                          "blurInputOnSelect": true,
                                                          "captureMenuScroll": false,
                                                          "className": "select-base",
                                                          "closeMenuOnScroll": false,
                                                          "closeMenuOnSelect": true,
                                                          "components": Object {},
                                                          "controlShouldRenderValue": true,
                                                          "data-spec": "operator-list",
                                                          "defaultInputValue": "",
                                                          "defaultMenuIsOpen": false,
                                                          "defaultValue": null,
                                                          "escapeClearsValue": false,
                                                          "filterOption": [Function],
                                                          "formatGroupLabel": [Function],
                                                          "getOptionLabel": [Function],
                                                          "getOptionValue": [Function],
                                                          "inputValue": "",
                                                          "isClearable": false,
                                                          "isDisabled": false,
                                                          "isLoading": false,
                                                          "isMulti": false,
                                                          "isOptionDisabled": [Function],
                                                          "isRtl": false,
                                                          "isSearchable": false,
                                                          "loadingMessage": [Function],
                                                          "maxMenuHeight": 300,
                                                          "menuIsOpen": false,
                                                          "menuPlacement": "auto",
                                                          "menuPosition": "absolute",
                                                          "menuShouldBlockScroll": false,
                                                          "menuShouldScrollIntoView": true,
                                                          "minMenuHeight": 140,
                                                          "name": "operator",
                                                          "noOptionsMessage": [Function],
                                                          "onChange": [Function],
                                                          "onInputChange": [Function],
                                                          "onMenuClose": [Function],
                                                          "onMenuOpen": [Function],
                                                          "openMenuOnClick": true,
                                                          "openMenuOnFocus": false,
                                                          "options": Array [
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_beginning",
                                                              "verboseName": "starts with",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Number",
                                                              "type": "has_number",
                                                              "verboseName": "has a number",
                                                            },
                                                            Object {
                                                              "additionalArguments": 2,
                                                              "type": "has_number_between",
                                                              "verboseName": "has a number between",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_lt",
                                                              "verboseName": "has a number below",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_lte",
                                                              "verboseName": "has a number at or below",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_eq",
                                                              "verboseName": "has a number equal to",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_gte",
                                                              "verboseName": "has a number at or above",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_gt",
                                                              "verboseName": "has a number above",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Phone",
                                                              "type": "has_phone",
                                                              "verboseName": "has a phone number",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Not Empty",
                                                              "type": "has_value",
                                                              "verboseName": "is not empty",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Attachment",
                                                              "initialArgument": "@input.attachments",
                                                              "type": "has_attachment",
                                                              "verboseName": "has an attachment",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_pattern",
                                                              "verboseName": "matches regex",
                                                            },
                                                          ],
                                                          "pageSize": 5,
                                                          "placeholder": "Select...",
                                                          "screenReaderStatus": [Function],
                                                          "styles": Object {
                                                            "control": [Function],
                                                            "indicatorsContainer": [Function],
                                                            "input": [Function],
                                                            "menuList": [Function],
                                                            "option": [Function],
                                                            "singleValue": [Function],
                                                            "valueContainer": [Function],
                                                          },
                                                          "tabIndex": "0",
                                                          "tabSelectsValue": true,
                                                          "value": Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_any_word",
                                                            "verboseName": "has any of the words",
                                                            "visibility": Array [
                                                              "messaging",
                                                              "messaging_offline",
                                                            ],
                                                          },
                                                        }
                                                      }
                                                      setValue={[Function]}
                                                      theme={
                                                        Object {
                                                          "borderRadius": 4,
                                                          "colors": Object {
                                                            "danger": "#DE350B",
                                                            "dangerLight": "#FFBDAD",
                                                            "neutral0": "hsl(0, 0%, 100%)",
                                                            "neutral10": "hsl(0, 0%, 90%)",
                                                            "neutral20": "hsl(0, 0%, 80%)",
                                                            "neutral30": "hsl(0, 0%, 70%)",
                                                            "neutral40": "hsl(0, 0%, 60%)",
                                                            "neutral5": "hsl(0, 0%, 95%)",
                                                            "neutral50": "hsl(0, 0%, 50%)",
                                                            "neutral60": "hsl(0, 0%, 40%)",
                                                            "neutral70": "hsl(0, 0%, 30%)",
                                                            "neutral80": "hsl(0, 0%, 20%)",
                                                            "neutral90": "hsl(0, 0%, 10%)",
                                                            "primary": "#2684FF",
                                                            "primary25": "#DEEBFF",
                                                            "primary50": "#B2D4FF",
                                                            "primary75": "#4C9AFF",
                                                          },
                                                          "spacing": Object {
                                                            "baseUnit": 4,
                                                            "controlHeight": 38,
                                                            "menuGutter": 8,
                                                          },
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="css-1vpc3wb"
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                      >
                                                        <ValueContainer
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          isDisabled={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_beginning",
                                                                "verboseName": "starts with",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Number",
                                                                "type": "has_number",
                                                                "verboseName": "has a number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 2,
                                                                "type": "has_number_between",
                                                                "verboseName": "has a number between",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lt",
                                                                "verboseName": "has a number below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lte",
                                                                "verboseName": "has a number at or below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_eq",
                                                                "verboseName": "has a number equal to",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gte",
                                                                "verboseName": "has a number at or above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gt",
                                                                "verboseName": "has a number above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Phone",
                                                                "type": "has_phone",
                                                                "verboseName": "has a phone number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Not Empty",
                                                                "type": "has_value",
                                                                "verboseName": "is not empty",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Attachment",
                                                                "initialArgument": "@input.attachments",
                                                                "type": "has_attachment",
                                                                "verboseName": "has an attachment",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_pattern",
                                                                "verboseName": "matches regex",
                                                              },
                                                            ]
                                                          }
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "select-base",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {},
                                                              "controlShouldRenderValue": true,
                                                              "data-spec": "operator-list",
                                                              "defaultInputValue": "",
                                                              "defaultMenuIsOpen": false,
                                                              "defaultValue": null,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "inputValue": "",
                                                              "isClearable": false,
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "auto",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "operator",
                                                              "noOptionsMessage": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_beginning",
                                                                  "verboseName": "starts with",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Number",
                                                                  "type": "has_number",
                                                                  "verboseName": "has a number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 2,
                                                                  "type": "has_number_between",
                                                                  "verboseName": "has a number between",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lt",
                                                                  "verboseName": "has a number below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lte",
                                                                  "verboseName": "has a number at or below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_eq",
                                                                  "verboseName": "has a number equal to",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gte",
                                                                  "verboseName": "has a number at or above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gt",
                                                                  "verboseName": "has a number above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Phone",
                                                                  "type": "has_phone",
                                                                  "verboseName": "has a phone number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Not Empty",
                                                                  "type": "has_value",
                                                                  "verboseName": "is not empty",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Attachment",
                                                                  "initialArgument": "@input.attachments",
                                                                  "type": "has_attachment",
                                                                  "verboseName": "has an attachment",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_pattern",
                                                                  "verboseName": "matches regex",
                                                                },
                                                              ],
                                                              "pageSize": 5,
                                                              "placeholder": "Select...",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {
                                                                "control": [Function],
                                                                "indicatorsContainer": [Function],
                                                                "input": [Function],
                                                                "menuList": [Function],
                                                                "option": [Function],
                                                                "singleValue": [Function],
                                                                "valueContainer": [Function],
                                                              },
                                                              "tabIndex": "0",
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_any_word",
                                                                "verboseName": "has any of the words",
                                                                "visibility": Array [
                                                                  "messaging",
                                                                  "messaging_offline",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="css-c2yhe2"
                                                          >
                                                            <SingleValue
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              data={
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_any_word",
                                                                  "verboseName": "has any of the words",
                                                                  "visibility": Array [
                                                                    "messaging",
                                                                    "messaging_offline",
                                                                  ],
                                                                }
                                                              }
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              isDisabled={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="css-16k2dzr"
                                                              >
                                                                has any of the words
                                                              </div>
                                                            </SingleValue>
                                                            <DummyInput
                                                              disabled={false}
                                                              id="react-select-4-input"
                                                              innerRef={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              readOnly={true}
                                                              tabIndex="0"
                                                              value=""
                                                            >
                                                              <input
                                                                className="css-14uuagi"
                                                                disabled={false}
                                                                id="react-select-4-input"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                readOnly={true}
                                                                tabIndex="0"
                                                                value=""
                                                              />
                                                            </DummyInput>
                                                          </div>
                                                        </ValueContainer>
                                                        <IndicatorsContainer
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          isDisabled={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_beginning",
                                                                "verboseName": "starts with",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Number",
                                                                "type": "has_number",
                                                                "verboseName": "has a number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 2,
                                                                "type": "has_number_between",
                                                                "verboseName": "has a number between",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lt",
                                                                "verboseName": "has a number below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lte",
                                                                "verboseName": "has a number at or below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_eq",
                                                                "verboseName": "has a number equal to",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gte",
                                                                "verboseName": "has a number at or above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gt",
                                                                "verboseName": "has a number above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Phone",
                                                                "type": "has_phone",
                                                                "verboseName": "has a phone number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Not Empty",
                                                                "type": "has_value",
                                                                "verboseName": "is not empty",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Attachment",
                                                                "initialArgument": "@input.attachments",
                                                                "type": "has_attachment",
                                                                "verboseName": "has an attachment",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_pattern",
                                                                "verboseName": "matches regex",
                                                              },
                                                            ]
                                                          }
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "select-base",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {},
                                                              "controlShouldRenderValue": true,
                                                              "data-spec": "operator-list",
                                                              "defaultInputValue": "",
                                                              "defaultMenuIsOpen": false,
                                                              "defaultValue": null,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "inputValue": "",
                                                              "isClearable": false,
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "auto",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "operator",
                                                              "noOptionsMessage": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_beginning",
                                                                  "verboseName": "starts with",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Number",
                                                                  "type": "has_number",
                                                                  "verboseName": "has a number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 2,
                                                                  "type": "has_number_between",
                                                                  "verboseName": "has a number between",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lt",
                                                                  "verboseName": "has a number below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lte",
                                                                  "verboseName": "has a number at or below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_eq",
                                                                  "verboseName": "has a number equal to",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gte",
                                                                  "verboseName": "has a number at or above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gt",
                                                                  "verboseName": "has a number above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Phone",
                                                                  "type": "has_phone",
                                                                  "verboseName": "has a phone number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Not Empty",
                                                                  "type": "has_value",
                                                                  "verboseName": "is not empty",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Attachment",
                                                                  "initialArgument": "@input.attachments",
                                                                  "type": "has_attachment",
                                                                  "verboseName": "has an attachment",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_pattern",
                                                                  "verboseName": "matches regex",
                                                                },
                                                              ],
                                                              "pageSize": 5,
                                                              "placeholder": "Select...",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {
                                                                "control": [Function],
                                                                "indicatorsContainer": [Function],
                                                                "input": [Function],
                                                                "menuList": [Function],
                                                                "option": [Function],
                                                                "singleValue": [Function],
                                                                "valueContainer": [Function],
                                                              },
                                                              "tabIndex": "0",
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_any_word",
                                                                "verboseName": "has any of the words",
                                                                "visibility": Array [
                                                                  "messaging",
                                                                  "messaging_offline",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="css-1l76mts"
                                                          >
                                                            <IndicatorSeparator
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              isDisabled={false}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="css-d8oujb"
                                                              />
                                                            </IndicatorSeparator>
                                                            <DropdownIndicator
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              innerProps={
                                                                Object {
                                                                  "aria-hidden": "true",
                                                                  "onMouseDown": [Function],
                                                                  "onTouchEnd": [Function],
                                                                }
                                                              }
                                                              isDisabled={false}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                aria-hidden="true"
                                                                className="css-1ep9fjw"
                                                                onMouseDown={[Function]}
                                                                onTouchEnd={[Function]}
                                                              >
                                                                <DownChevron>
                                                                  <Svg
                                                                    size={20}
                                                                  >
                                                                    <svg
                                                                      aria-hidden="true"
                                                                      className="css-19bqh2r"
                                                                      focusable="false"
                                                                      height={20}
                                                                      viewBox="0 0 20 20"
                                                                      width={20}
                                                                    >
                                                                      <path
                                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                                      />
                                                                    </svg>
                                                                  </Svg>
                                                                </DownChevron>
                                                              </div>
                                                            </DropdownIndicator>
                                                          </div>
                                                        </IndicatorsContainer>
                                                      </div>
                                                    </Control>
                                                    <input
                                                      name="operator"
                                                      type="hidden"
                                                      value="has_any_word"
                                                    />
                                                  </div>
                                                </SelectContainer>
                                              </Select>
                                            </StateManager>
                                          </div>
                                          <div
                                            className="singleOperand"
                                          >
                                            <Connect(TextInputElement)
                                              autocomplete={true}
                                              data-spec="args-input"
                                              entry={
                                                Object {
                                                  "persistantFailures": Array [],
                                                  "value": "Green, g",
                                                }
                                              }
                                              name="arguments"
                                              onChange={[Function]}
                                              onFieldFailures={[Function]}
                                            >
                                              <TextInputElement
                                                assetStore={Object {}}
                                                autocomplete={true}
                                                data-spec="args-input"
                                                dispatch={[Function]}
                                                entry={
                                                  Object {
                                                    "persistantFailures": Array [],
                                                    "value": "Green, g",
                                                  }
                                                }
                                                name="arguments"
                                                onChange={[Function]}
                                                onFieldFailures={[Function]}
                                                typeConfig={null}
                                              >
                                                <FormElement
                                                  entry={
                                                    Object {
                                                      "persistantFailures": Array [],
                                                      "value": "Green, g",
                                                    }
                                                  }
                                                  name="arguments"
                                                  sendMsgError={false}
                                                >
                                                  <div
                                                    className="ele"
                                                  >
                                                    <div
                                                      className="wrapper"
                                                    >
                                                      <input
                                                        className="textinput"
                                                        data-spec="input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        type="text"
                                                        value="Green, g"
                                                      />
                                                      <div
                                                        className="completionContainer hidden"
                                                        data-spec="completion-options"
                                                        style={
                                                          Object {
                                                            "left": 0,
                                                            "top": 0,
                                                          }
                                                        }
                                                      >
                                                        <ul
                                                          className="option_list"
                                                          data-spec="completion-list"
                                                        />
                                                        <div
                                                          className="help"
                                                          data-spec="completion-help"
                                                        >
                                                          Tab to complete, enter to select
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </FormElement>
                                              </TextInputElement>
                                            </Connect(TextInputElement)>
                                          </div>
                                          <div
                                            className="categorizeAs"
                                          >
                                            categorize as
                                          </div>
                                          <div
                                            className="category"
                                          >
                                            <Connect(TextInputElement)
                                              data-spec="exit-input"
                                              entry={
                                                Object {
                                                  "value": "Green",
                                                }
                                              }
                                              name="exitName"
                                              onChange={[Function]}
                                              showInvalid={false}
                                            >
                                              <TextInputElement
                                                assetStore={Object {}}
                                                data-spec="exit-input"
                                                dispatch={[Function]}
                                                entry={
                                                  Object {
                                                    "value": "Green",
                                                  }
                                                }
                                                name="exitName"
                                                onChange={[Function]}
                                                showInvalid={false}
                                                typeConfig={null}
                                              >
                                                <FormElement
                                                  entry={
                                                    Object {
                                                      "value": "Green",
                                                    }
                                                  }
                                                  name="exitName"
                                                  sendMsgError={false}
                                                >
                                                  <div
                                                    className="ele"
                                                  >
                                                    <div
                                                      className="wrapper"
                                                    >
                                                      <input
                                                        className="textinput"
                                                        data-spec="input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        type="text"
                                                        value="Green"
                                                      />
                                                      <div
                                                        className="completionContainer hidden"
                                                        data-spec="completion-options"
                                                        style={
                                                          Object {
                                                            "left": 0,
                                                            "top": 0,
                                                          }
                                                        }
                                                      >
                                                        <ul
                                                          className="option_list"
                                                          data-spec="completion-list"
                                                        />
                                                        <div
                                                          className="help"
                                                          data-spec="completion-help"
                                                        >
                                                          Tab to complete, enter to select
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </FormElement>
                                              </TextInputElement>
                                            </Connect(TextInputElement)>
                                          </div>
                                          <span
                                            className="fe-x removeIcon"
                                            onClick={[Function]}
                                          />
                                        </div>
                                      </div>
                                    </FormElement>
                                  </CaseElement>
                                </div>
                              </div>
                            </DragHandle>
                          </Motion>
                        </Movable>
                      </DraggableDimensionPublisher>
                    </Connect(DraggableDimensionPublisher)>
                  </Draggable>
                </Connect(Draggable)>
                <Connect(Draggable)
                  draggableId="763e4844-3e1b-407a-a1b5-5fdfcd308b41"
                  isDragDisabled={true}
                  key="763e4844-3e1b-407a-a1b5-5fdfcd308b41"
                >
                  <Draggable
                    canAnimate={false}
                    canLift={true}
                    cancel={[Function]}
                    crossAxisMoveBackward={[Function]}
                    crossAxisMoveForward={[Function]}
                    dimension={null}
                    direction={null}
                    disableInteractiveElementBlocking={false}
                    draggableId="763e4844-3e1b-407a-a1b5-5fdfcd308b41"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    isDragDisabled={true}
                    isDragging={false}
                    isDropAnimating={false}
                    lift={[Function]}
                    move={[Function]}
                    moveBackward={[Function]}
                    moveByWindowScroll={[Function]}
                    moveForward={[Function]}
                    offset={
                      Object {
                        "x": 0,
                        "y": 0,
                      }
                    }
                    type="DEFAULT"
                  >
                    <Connect(DraggableDimensionPublisher)
                      draggableId="763e4844-3e1b-407a-a1b5-5fdfcd308b41"
                      droppableId="droppable"
                      targetRef={
                        <div
                          style="user-select: none; outline: none; pointer-events: auto;"
                        >
                          <div
                            class="ele group"
                          >
                            <div
                              class="kase"
                            >
                              <span
                                class="fe-chevrons-expand dndIcon"
                              />
                              <div
                                class="choice select-medium"
                              >
                                <div
                                  class="css-10nd86i select-base"
                                >
                                  <div
                                    class="css-1vpc3wb"
                                  >
                                    <div
                                      class="css-c2yhe2"
                                    >
                                      <div
                                        class="css-16k2dzr"
                                      >
                                        has any of the words
                                      </div>
                                      <input
                                        class="css-14uuagi"
                                        id="react-select-5-input"
                                        readonly=""
                                        tabindex="0"
                                        value=""
                                      />
                                    </div>
                                    <div
                                      class="css-1l76mts"
                                    >
                                      <span
                                        class="css-d8oujb"
                                      />
                                      <div
                                        aria-hidden="true"
                                        class="css-1ep9fjw"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="css-19bqh2r"
                                          focusable="false"
                                          height="20"
                                          viewBox="0 0 20 20"
                                          width="20"
                                        >
                                          <path
                                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                          />
                                        </svg>
                                      </div>
                                    </div>
                                  </div>
                                  <input
                                    name="operator"
                                    type="hidden"
                                    value="has_any_word"
                                  />
                                </div>
                              </div>
                              <div
                                class="singleOperand"
                              >
                                <div
                                  class="ele"
                                >
                                  <div
                                    class="wrapper"
                                  >
                                    <input
                                      class="textinput"
                                      data-spec="input"
                                      type="text"
                                      value=""
                                    />
                                    <div
                                      class="completionContainer hidden"
                                      data-spec="completion-options"
                                      style="top: 0px; left: 0px;"
                                    >
                                      <ul
                                        class="option_list"
                                        data-spec="completion-list"
                                      />
                                      <div
                                        class="help"
                                        data-spec="completion-help"
                                      >
                                        Tab to complete, enter to select
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <div
                                class="categorizeAs"
                              >
                                categorize as
                              </div>
                              <div
                                class="category"
                              >
                                <div
                                  class="ele"
                                >
                                  <div
                                    class="wrapper"
                                  >
                                    <input
                                      class="textinput"
                                      data-spec="input"
                                      type="text"
                                      value=""
                                    />
                                    <div
                                      class="completionContainer hidden"
                                      data-spec="completion-options"
                                      style="top: 0px; left: 0px;"
                                    >
                                      <ul
                                        class="option_list"
                                        data-spec="completion-list"
                                      />
                                      <div
                                        class="help"
                                        data-spec="completion-help"
                                      >
                                        Tab to complete, enter to select
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <span
                                class="fe-x removeIcon"
                              />
                            </div>
                          </div>
                        </div>
                      }
                      type="DEFAULT"
                    >
                      <DraggableDimensionPublisher
                        draggableId="763e4844-3e1b-407a-a1b5-5fdfcd308b41"
                        droppableId="droppable"
                        publish={[Function]}
                        shouldPublish={false}
                        targetRef={
                          <div
                            style="user-select: none; outline: none; pointer-events: auto;"
                          >
                            <div
                              class="ele group"
                            >
                              <div
                                class="kase"
                              >
                                <span
                                  class="fe-chevrons-expand dndIcon"
                                />
                                <div
                                  class="choice select-medium"
                                >
                                  <div
                                    class="css-10nd86i select-base"
                                  >
                                    <div
                                      class="css-1vpc3wb"
                                    >
                                      <div
                                        class="css-c2yhe2"
                                      >
                                        <div
                                          class="css-16k2dzr"
                                        >
                                          has any of the words
                                        </div>
                                        <input
                                          class="css-14uuagi"
                                          id="react-select-5-input"
                                          readonly=""
                                          tabindex="0"
                                          value=""
                                        />
                                      </div>
                                      <div
                                        class="css-1l76mts"
                                      >
                                        <span
                                          class="css-d8oujb"
                                        />
                                        <div
                                          aria-hidden="true"
                                          class="css-1ep9fjw"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="css-19bqh2r"
                                            focusable="false"
                                            height="20"
                                            viewBox="0 0 20 20"
                                            width="20"
                                          >
                                            <path
                                              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                            />
                                          </svg>
                                        </div>
                                      </div>
                                    </div>
                                    <input
                                      name="operator"
                                      type="hidden"
                                      value="has_any_word"
                                    />
                                  </div>
                                </div>
                                <div
                                  class="singleOperand"
                                >
                                  <div
                                    class="ele"
                                  >
                                    <div
                                      class="wrapper"
                                    >
                                      <input
                                        class="textinput"
                                        data-spec="input"
                                        type="text"
                                        value=""
                                      />
                                      <div
                                        class="completionContainer hidden"
                                        data-spec="completion-options"
                                        style="top: 0px; left: 0px;"
                                      >
                                        <ul
                                          class="option_list"
                                          data-spec="completion-list"
                                        />
                                        <div
                                          class="help"
                                          data-spec="completion-help"
                                        >
                                          Tab to complete, enter to select
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  class="categorizeAs"
                                >
                                  categorize as
                                </div>
                                <div
                                  class="category"
                                >
                                  <div
                                    class="ele"
                                  >
                                    <div
                                      class="wrapper"
                                    >
                                      <input
                                        class="textinput"
                                        data-spec="input"
                                        type="text"
                                        value=""
                                      />
                                      <div
                                        class="completionContainer hidden"
                                        data-spec="completion-options"
                                        style="top: 0px; left: 0px;"
                                      >
                                        <ul
                                          class="option_list"
                                          data-spec="completion-list"
                                        />
                                        <div
                                          class="help"
                                          data-spec="completion-help"
                                        >
                                          Tab to complete, enter to select
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <span
                                  class="fe-x removeIcon"
                                />
                              </div>
                            </div>
                          </div>
                        }
                        type="DEFAULT"
                      >
                        <Movable
                          destination={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          onMoveEnd={[Function]}
                          speed="INSTANT"
                        >
                          <Motion
                            defaultStyle={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                            onRest={[Function]}
                            style={
                              Object {
                                "x": 0,
                                "y": 0,
                              }
                            }
                          >
                            <DragHandle
                              callbacks={
                                Object {
                                  "onCancel": [Function],
                                  "onCrossAxisMoveBackward": [Function],
                                  "onCrossAxisMoveForward": [Function],
                                  "onDrop": [Function],
                                  "onLift": [Function],
                                  "onMove": [Function],
                                  "onMoveBackward": [Function],
                                  "onMoveForward": [Function],
                                  "onWindowScroll": [Function],
                                }
                              }
                              canDragInteractiveElements={false}
                              canLift={true}
                              direction={null}
                              getDraggableRef={[Function]}
                              isDragging={false}
                              isEnabled={false}
                            >
                              <div
                                data-spec="case-draggable"
                              >
                                <div
                                  style={
                                    Object {
                                      "WebkitTapHighlightColor": "rgba(0,0,0,0)",
                                      "WebkitTouchCallout": "none",
                                      "outline": "none",
                                      "pointerEvents": "auto",
                                      "touchAction": "manipulation",
                                      "transform": null,
                                      "transition": null,
                                      "userSelect": "none",
                                    }
                                  }
                                >
                                  <CaseElement
                                    categoryName=""
                                    kase={
                                      Object {
                                        "arguments": Array [
                                          "",
                                        ],
                                        "category_uuid": null,
                                        "type": "has_any_word",
                                        "uuid": "763e4844-3e1b-407a-a1b5-5fdfcd308b41",
                                      }
                                    }
                                    key="763e4844-3e1b-407a-a1b5-5fdfcd308b41"
                                    onChange={[Function]}
                                    onRemove={[Function]}
                                    uuid="763e4844-3e1b-407a-a1b5-5fdfcd308b41"
                                    valid={true}
                                  >
                                    <FormElement
                                      __className="group"
                                      data-spec="case-form"
                                      kaseError={false}
                                    >
                                      <div
                                        className="ele group"
                                      >
                                        <div
                                          className="kase"
                                        >
                                          <span
                                            className="fe-chevrons-expand dndIcon"
                                          />
                                          <div
                                            className="choice select-medium"
                                          >
                                            <StateManager
                                              className="select-base"
                                              data-spec="operator-list"
                                              defaultInputValue=""
                                              defaultMenuIsOpen={false}
                                              defaultValue={null}
                                              getOptionLabel={[Function]}
                                              getOptionValue={[Function]}
                                              isClearable={false}
                                              isSearchable={false}
                                              menuPlacement="auto"
                                              name="operator"
                                              onChange={[Function]}
                                              options={
                                                Array [
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_beginning",
                                                    "verboseName": "starts with",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Number",
                                                    "type": "has_number",
                                                    "verboseName": "has a number",
                                                  },
                                                  Object {
                                                    "additionalArguments": 2,
                                                    "type": "has_number_between",
                                                    "verboseName": "has a number between",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_lt",
                                                    "verboseName": "has a number below",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_lte",
                                                    "verboseName": "has a number at or below",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_eq",
                                                    "verboseName": "has a number equal to",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_gte",
                                                    "verboseName": "has a number at or above",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_number_gt",
                                                    "verboseName": "has a number above",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Phone",
                                                    "type": "has_phone",
                                                    "verboseName": "has a phone number",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Not Empty",
                                                    "type": "has_value",
                                                    "verboseName": "is not empty",
                                                  },
                                                  Object {
                                                    "additionalArguments": 0,
                                                    "categoryName": "Has Attachment",
                                                    "initialArgument": "@input.attachments",
                                                    "type": "has_attachment",
                                                    "verboseName": "has an attachment",
                                                  },
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_pattern",
                                                    "verboseName": "matches regex",
                                                  },
                                                ]
                                              }
                                              styles={
                                                Object {
                                                  "control": [Function],
                                                  "indicatorsContainer": [Function],
                                                  "input": [Function],
                                                  "menuList": [Function],
                                                  "option": [Function],
                                                  "singleValue": [Function],
                                                  "valueContainer": [Function],
                                                }
                                              }
                                              value={
                                                Object {
                                                  "additionalArguments": 1,
                                                  "type": "has_any_word",
                                                  "verboseName": "has any of the words",
                                                  "visibility": Array [
                                                    "messaging",
                                                    "messaging_offline",
                                                  ],
                                                }
                                              }
                                            >
                                              <Select
                                                backspaceRemovesValue={true}
                                                blurInputOnSelect={true}
                                                captureMenuScroll={false}
                                                className="select-base"
                                                closeMenuOnScroll={false}
                                                closeMenuOnSelect={true}
                                                components={Object {}}
                                                controlShouldRenderValue={true}
                                                data-spec="operator-list"
                                                defaultInputValue=""
                                                defaultMenuIsOpen={false}
                                                defaultValue={null}
                                                escapeClearsValue={false}
                                                filterOption={[Function]}
                                                formatGroupLabel={[Function]}
                                                getOptionLabel={[Function]}
                                                getOptionValue={[Function]}
                                                inputValue=""
                                                isClearable={false}
                                                isDisabled={false}
                                                isLoading={false}
                                                isMulti={false}
                                                isOptionDisabled={[Function]}
                                                isRtl={false}
                                                isSearchable={false}
                                                loadingMessage={[Function]}
                                                maxMenuHeight={300}
                                                menuIsOpen={false}
                                                menuPlacement="auto"
                                                menuPosition="absolute"
                                                menuShouldBlockScroll={false}
                                                menuShouldScrollIntoView={true}
                                                minMenuHeight={140}
                                                name="operator"
                                                noOptionsMessage={[Function]}
                                                onChange={[Function]}
                                                onInputChange={[Function]}
                                                onMenuClose={[Function]}
                                                onMenuOpen={[Function]}
                                                openMenuOnClick={true}
                                                openMenuOnFocus={false}
                                                options={
                                                  Array [
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_beginning",
                                                      "verboseName": "starts with",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Number",
                                                      "type": "has_number",
                                                      "verboseName": "has a number",
                                                    },
                                                    Object {
                                                      "additionalArguments": 2,
                                                      "type": "has_number_between",
                                                      "verboseName": "has a number between",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_lt",
                                                      "verboseName": "has a number below",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_lte",
                                                      "verboseName": "has a number at or below",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_eq",
                                                      "verboseName": "has a number equal to",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_gte",
                                                      "verboseName": "has a number at or above",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_number_gt",
                                                      "verboseName": "has a number above",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Phone",
                                                      "type": "has_phone",
                                                      "verboseName": "has a phone number",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Not Empty",
                                                      "type": "has_value",
                                                      "verboseName": "is not empty",
                                                    },
                                                    Object {
                                                      "additionalArguments": 0,
                                                      "categoryName": "Has Attachment",
                                                      "initialArgument": "@input.attachments",
                                                      "type": "has_attachment",
                                                      "verboseName": "has an attachment",
                                                    },
                                                    Object {
                                                      "additionalArguments": 1,
                                                      "type": "has_pattern",
                                                      "verboseName": "matches regex",
                                                    },
                                                  ]
                                                }
                                                pageSize={5}
                                                placeholder="Select..."
                                                screenReaderStatus={[Function]}
                                                styles={
                                                  Object {
                                                    "control": [Function],
                                                    "indicatorsContainer": [Function],
                                                    "input": [Function],
                                                    "menuList": [Function],
                                                    "option": [Function],
                                                    "singleValue": [Function],
                                                    "valueContainer": [Function],
                                                  }
                                                }
                                                tabIndex="0"
                                                tabSelectsValue={true}
                                                value={
                                                  Object {
                                                    "additionalArguments": 1,
                                                    "type": "has_any_word",
                                                    "verboseName": "has any of the words",
                                                    "visibility": Array [
                                                      "messaging",
                                                      "messaging_offline",
                                                    ],
                                                  }
                                                }
                                              >
                                                <SelectContainer
                                                  className="select-base"
                                                  clearValue={[Function]}
                                                  cx={[Function]}
                                                  getStyles={[Function]}
                                                  getValue={[Function]}
                                                  hasValue={true}
                                                  innerProps={
                                                    Object {
                                                      "id": undefined,
                                                      "onKeyDown": [Function],
                                                    }
                                                  }
                                                  isDisabled={false}
                                                  isFocused={false}
                                                  isMulti={false}
                                                  isRtl={false}
                                                  options={
                                                    Array [
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_beginning",
                                                        "verboseName": "starts with",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Number",
                                                        "type": "has_number",
                                                        "verboseName": "has a number",
                                                      },
                                                      Object {
                                                        "additionalArguments": 2,
                                                        "type": "has_number_between",
                                                        "verboseName": "has a number between",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_lt",
                                                        "verboseName": "has a number below",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_lte",
                                                        "verboseName": "has a number at or below",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_eq",
                                                        "verboseName": "has a number equal to",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_gte",
                                                        "verboseName": "has a number at or above",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_number_gt",
                                                        "verboseName": "has a number above",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Phone",
                                                        "type": "has_phone",
                                                        "verboseName": "has a phone number",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Not Empty",
                                                        "type": "has_value",
                                                        "verboseName": "is not empty",
                                                      },
                                                      Object {
                                                        "additionalArguments": 0,
                                                        "categoryName": "Has Attachment",
                                                        "initialArgument": "@input.attachments",
                                                        "type": "has_attachment",
                                                        "verboseName": "has an attachment",
                                                      },
                                                      Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_pattern",
                                                        "verboseName": "matches regex",
                                                      },
                                                    ]
                                                  }
                                                  selectOption={[Function]}
                                                  selectProps={
                                                    Object {
                                                      "backspaceRemovesValue": true,
                                                      "blurInputOnSelect": true,
                                                      "captureMenuScroll": false,
                                                      "className": "select-base",
                                                      "closeMenuOnScroll": false,
                                                      "closeMenuOnSelect": true,
                                                      "components": Object {},
                                                      "controlShouldRenderValue": true,
                                                      "data-spec": "operator-list",
                                                      "defaultInputValue": "",
                                                      "defaultMenuIsOpen": false,
                                                      "defaultValue": null,
                                                      "escapeClearsValue": false,
                                                      "filterOption": [Function],
                                                      "formatGroupLabel": [Function],
                                                      "getOptionLabel": [Function],
                                                      "getOptionValue": [Function],
                                                      "inputValue": "",
                                                      "isClearable": false,
                                                      "isDisabled": false,
                                                      "isLoading": false,
                                                      "isMulti": false,
                                                      "isOptionDisabled": [Function],
                                                      "isRtl": false,
                                                      "isSearchable": false,
                                                      "loadingMessage": [Function],
                                                      "maxMenuHeight": 300,
                                                      "menuIsOpen": false,
                                                      "menuPlacement": "auto",
                                                      "menuPosition": "absolute",
                                                      "menuShouldBlockScroll": false,
                                                      "menuShouldScrollIntoView": true,
                                                      "minMenuHeight": 140,
                                                      "name": "operator",
                                                      "noOptionsMessage": [Function],
                                                      "onChange": [Function],
                                                      "onInputChange": [Function],
                                                      "onMenuClose": [Function],
                                                      "onMenuOpen": [Function],
                                                      "openMenuOnClick": true,
                                                      "openMenuOnFocus": false,
                                                      "options": Array [
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_beginning",
                                                          "verboseName": "starts with",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Number",
                                                          "type": "has_number",
                                                          "verboseName": "has a number",
                                                        },
                                                        Object {
                                                          "additionalArguments": 2,
                                                          "type": "has_number_between",
                                                          "verboseName": "has a number between",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_lt",
                                                          "verboseName": "has a number below",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_lte",
                                                          "verboseName": "has a number at or below",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_eq",
                                                          "verboseName": "has a number equal to",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_gte",
                                                          "verboseName": "has a number at or above",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_number_gt",
                                                          "verboseName": "has a number above",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Phone",
                                                          "type": "has_phone",
                                                          "verboseName": "has a phone number",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Not Empty",
                                                          "type": "has_value",
                                                          "verboseName": "is not empty",
                                                        },
                                                        Object {
                                                          "additionalArguments": 0,
                                                          "categoryName": "Has Attachment",
                                                          "initialArgument": "@input.attachments",
                                                          "type": "has_attachment",
                                                          "verboseName": "has an attachment",
                                                        },
                                                        Object {
                                                          "additionalArguments": 1,
                                                          "type": "has_pattern",
                                                          "verboseName": "matches regex",
                                                        },
                                                      ],
                                                      "pageSize": 5,
                                                      "placeholder": "Select...",
                                                      "screenReaderStatus": [Function],
                                                      "styles": Object {
                                                        "control": [Function],
                                                        "indicatorsContainer": [Function],
                                                        "input": [Function],
                                                        "menuList": [Function],
                                                        "option": [Function],
                                                        "singleValue": [Function],
                                                        "valueContainer": [Function],
                                                      },
                                                      "tabIndex": "0",
                                                      "tabSelectsValue": true,
                                                      "value": Object {
                                                        "additionalArguments": 1,
                                                        "type": "has_any_word",
                                                        "verboseName": "has any of the words",
                                                        "visibility": Array [
                                                          "messaging",
                                                          "messaging_offline",
                                                        ],
                                                      },
                                                    }
                                                  }
                                                  setValue={[Function]}
                                                  theme={
                                                    Object {
                                                      "borderRadius": 4,
                                                      "colors": Object {
                                                        "danger": "#DE350B",
                                                        "dangerLight": "#FFBDAD",
                                                        "neutral0": "hsl(0, 0%, 100%)",
                                                        "neutral10": "hsl(0, 0%, 90%)",
                                                        "neutral20": "hsl(0, 0%, 80%)",
                                                        "neutral30": "hsl(0, 0%, 70%)",
                                                        "neutral40": "hsl(0, 0%, 60%)",
                                                        "neutral5": "hsl(0, 0%, 95%)",
                                                        "neutral50": "hsl(0, 0%, 50%)",
                                                        "neutral60": "hsl(0, 0%, 40%)",
                                                        "neutral70": "hsl(0, 0%, 30%)",
                                                        "neutral80": "hsl(0, 0%, 20%)",
                                                        "neutral90": "hsl(0, 0%, 10%)",
                                                        "primary": "#2684FF",
                                                        "primary25": "#DEEBFF",
                                                        "primary50": "#B2D4FF",
                                                        "primary75": "#4C9AFF",
                                                      },
                                                      "spacing": Object {
                                                        "baseUnit": 4,
                                                        "controlHeight": 38,
                                                        "menuGutter": 8,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="css-10nd86i select-base"
                                                    onKeyDown={[Function]}
                                                  >
                                                    <Control
                                                      clearValue={[Function]}
                                                      cx={[Function]}
                                                      getStyles={[Function]}
                                                      getValue={[Function]}
                                                      hasValue={true}
                                                      innerProps={
                                                        Object {
                                                          "onMouseDown": [Function],
                                                          "onTouchEnd": [Function],
                                                        }
                                                      }
                                                      innerRef={[Function]}
                                                      isDisabled={false}
                                                      isFocused={false}
                                                      isMulti={false}
                                                      isRtl={false}
                                                      menuIsOpen={false}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_beginning",
                                                            "verboseName": "starts with",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Number",
                                                            "type": "has_number",
                                                            "verboseName": "has a number",
                                                          },
                                                          Object {
                                                            "additionalArguments": 2,
                                                            "type": "has_number_between",
                                                            "verboseName": "has a number between",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_lt",
                                                            "verboseName": "has a number below",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_lte",
                                                            "verboseName": "has a number at or below",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_eq",
                                                            "verboseName": "has a number equal to",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_gte",
                                                            "verboseName": "has a number at or above",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_number_gt",
                                                            "verboseName": "has a number above",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Phone",
                                                            "type": "has_phone",
                                                            "verboseName": "has a phone number",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Not Empty",
                                                            "type": "has_value",
                                                            "verboseName": "is not empty",
                                                          },
                                                          Object {
                                                            "additionalArguments": 0,
                                                            "categoryName": "Has Attachment",
                                                            "initialArgument": "@input.attachments",
                                                            "type": "has_attachment",
                                                            "verboseName": "has an attachment",
                                                          },
                                                          Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_pattern",
                                                            "verboseName": "matches regex",
                                                          },
                                                        ]
                                                      }
                                                      selectOption={[Function]}
                                                      selectProps={
                                                        Object {
                                                          "backspaceRemovesValue": true,
                                                          "blurInputOnSelect": true,
                                                          "captureMenuScroll": false,
                                                          "className": "select-base",
                                                          "closeMenuOnScroll": false,
                                                          "closeMenuOnSelect": true,
                                                          "components": Object {},
                                                          "controlShouldRenderValue": true,
                                                          "data-spec": "operator-list",
                                                          "defaultInputValue": "",
                                                          "defaultMenuIsOpen": false,
                                                          "defaultValue": null,
                                                          "escapeClearsValue": false,
                                                          "filterOption": [Function],
                                                          "formatGroupLabel": [Function],
                                                          "getOptionLabel": [Function],
                                                          "getOptionValue": [Function],
                                                          "inputValue": "",
                                                          "isClearable": false,
                                                          "isDisabled": false,
                                                          "isLoading": false,
                                                          "isMulti": false,
                                                          "isOptionDisabled": [Function],
                                                          "isRtl": false,
                                                          "isSearchable": false,
                                                          "loadingMessage": [Function],
                                                          "maxMenuHeight": 300,
                                                          "menuIsOpen": false,
                                                          "menuPlacement": "auto",
                                                          "menuPosition": "absolute",
                                                          "menuShouldBlockScroll": false,
                                                          "menuShouldScrollIntoView": true,
                                                          "minMenuHeight": 140,
                                                          "name": "operator",
                                                          "noOptionsMessage": [Function],
                                                          "onChange": [Function],
                                                          "onInputChange": [Function],
                                                          "onMenuClose": [Function],
                                                          "onMenuOpen": [Function],
                                                          "openMenuOnClick": true,
                                                          "openMenuOnFocus": false,
                                                          "options": Array [
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_beginning",
                                                              "verboseName": "starts with",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Number",
                                                              "type": "has_number",
                                                              "verboseName": "has a number",
                                                            },
                                                            Object {
                                                              "additionalArguments": 2,
                                                              "type": "has_number_between",
                                                              "verboseName": "has a number between",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_lt",
                                                              "verboseName": "has a number below",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_lte",
                                                              "verboseName": "has a number at or below",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_eq",
                                                              "verboseName": "has a number equal to",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_gte",
                                                              "verboseName": "has a number at or above",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_number_gt",
                                                              "verboseName": "has a number above",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Phone",
                                                              "type": "has_phone",
                                                              "verboseName": "has a phone number",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Not Empty",
                                                              "type": "has_value",
                                                              "verboseName": "is not empty",
                                                            },
                                                            Object {
                                                              "additionalArguments": 0,
                                                              "categoryName": "Has Attachment",
                                                              "initialArgument": "@input.attachments",
                                                              "type": "has_attachment",
                                                              "verboseName": "has an attachment",
                                                            },
                                                            Object {
                                                              "additionalArguments": 1,
                                                              "type": "has_pattern",
                                                              "verboseName": "matches regex",
                                                            },
                                                          ],
                                                          "pageSize": 5,
                                                          "placeholder": "Select...",
                                                          "screenReaderStatus": [Function],
                                                          "styles": Object {
                                                            "control": [Function],
                                                            "indicatorsContainer": [Function],
                                                            "input": [Function],
                                                            "menuList": [Function],
                                                            "option": [Function],
                                                            "singleValue": [Function],
                                                            "valueContainer": [Function],
                                                          },
                                                          "tabIndex": "0",
                                                          "tabSelectsValue": true,
                                                          "value": Object {
                                                            "additionalArguments": 1,
                                                            "type": "has_any_word",
                                                            "verboseName": "has any of the words",
                                                            "visibility": Array [
                                                              "messaging",
                                                              "messaging_offline",
                                                            ],
                                                          },
                                                        }
                                                      }
                                                      setValue={[Function]}
                                                      theme={
                                                        Object {
                                                          "borderRadius": 4,
                                                          "colors": Object {
                                                            "danger": "#DE350B",
                                                            "dangerLight": "#FFBDAD",
                                                            "neutral0": "hsl(0, 0%, 100%)",
                                                            "neutral10": "hsl(0, 0%, 90%)",
                                                            "neutral20": "hsl(0, 0%, 80%)",
                                                            "neutral30": "hsl(0, 0%, 70%)",
                                                            "neutral40": "hsl(0, 0%, 60%)",
                                                            "neutral5": "hsl(0, 0%, 95%)",
                                                            "neutral50": "hsl(0, 0%, 50%)",
                                                            "neutral60": "hsl(0, 0%, 40%)",
                                                            "neutral70": "hsl(0, 0%, 30%)",
                                                            "neutral80": "hsl(0, 0%, 20%)",
                                                            "neutral90": "hsl(0, 0%, 10%)",
                                                            "primary": "#2684FF",
                                                            "primary25": "#DEEBFF",
                                                            "primary50": "#B2D4FF",
                                                            "primary75": "#4C9AFF",
                                                          },
                                                          "spacing": Object {
                                                            "baseUnit": 4,
                                                            "controlHeight": 38,
                                                            "menuGutter": 8,
                                                          },
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="css-1vpc3wb"
                                                        onMouseDown={[Function]}
                                                        onTouchEnd={[Function]}
                                                      >
                                                        <ValueContainer
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          isDisabled={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_beginning",
                                                                "verboseName": "starts with",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Number",
                                                                "type": "has_number",
                                                                "verboseName": "has a number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 2,
                                                                "type": "has_number_between",
                                                                "verboseName": "has a number between",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lt",
                                                                "verboseName": "has a number below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lte",
                                                                "verboseName": "has a number at or below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_eq",
                                                                "verboseName": "has a number equal to",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gte",
                                                                "verboseName": "has a number at or above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gt",
                                                                "verboseName": "has a number above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Phone",
                                                                "type": "has_phone",
                                                                "verboseName": "has a phone number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Not Empty",
                                                                "type": "has_value",
                                                                "verboseName": "is not empty",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Attachment",
                                                                "initialArgument": "@input.attachments",
                                                                "type": "has_attachment",
                                                                "verboseName": "has an attachment",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_pattern",
                                                                "verboseName": "matches regex",
                                                              },
                                                            ]
                                                          }
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "select-base",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {},
                                                              "controlShouldRenderValue": true,
                                                              "data-spec": "operator-list",
                                                              "defaultInputValue": "",
                                                              "defaultMenuIsOpen": false,
                                                              "defaultValue": null,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "inputValue": "",
                                                              "isClearable": false,
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "auto",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "operator",
                                                              "noOptionsMessage": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_beginning",
                                                                  "verboseName": "starts with",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Number",
                                                                  "type": "has_number",
                                                                  "verboseName": "has a number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 2,
                                                                  "type": "has_number_between",
                                                                  "verboseName": "has a number between",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lt",
                                                                  "verboseName": "has a number below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lte",
                                                                  "verboseName": "has a number at or below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_eq",
                                                                  "verboseName": "has a number equal to",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gte",
                                                                  "verboseName": "has a number at or above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gt",
                                                                  "verboseName": "has a number above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Phone",
                                                                  "type": "has_phone",
                                                                  "verboseName": "has a phone number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Not Empty",
                                                                  "type": "has_value",
                                                                  "verboseName": "is not empty",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Attachment",
                                                                  "initialArgument": "@input.attachments",
                                                                  "type": "has_attachment",
                                                                  "verboseName": "has an attachment",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_pattern",
                                                                  "verboseName": "matches regex",
                                                                },
                                                              ],
                                                              "pageSize": 5,
                                                              "placeholder": "Select...",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {
                                                                "control": [Function],
                                                                "indicatorsContainer": [Function],
                                                                "input": [Function],
                                                                "menuList": [Function],
                                                                "option": [Function],
                                                                "singleValue": [Function],
                                                                "valueContainer": [Function],
                                                              },
                                                              "tabIndex": "0",
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_any_word",
                                                                "verboseName": "has any of the words",
                                                                "visibility": Array [
                                                                  "messaging",
                                                                  "messaging_offline",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="css-c2yhe2"
                                                          >
                                                            <SingleValue
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              data={
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_any_word",
                                                                  "verboseName": "has any of the words",
                                                                  "visibility": Array [
                                                                    "messaging",
                                                                    "messaging_offline",
                                                                  ],
                                                                }
                                                              }
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              isDisabled={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="css-16k2dzr"
                                                              >
                                                                has any of the words
                                                              </div>
                                                            </SingleValue>
                                                            <DummyInput
                                                              disabled={false}
                                                              id="react-select-5-input"
                                                              innerRef={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              readOnly={true}
                                                              tabIndex="0"
                                                              value=""
                                                            >
                                                              <input
                                                                className="css-14uuagi"
                                                                disabled={false}
                                                                id="react-select-5-input"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                readOnly={true}
                                                                tabIndex="0"
                                                                value=""
                                                              />
                                                            </DummyInput>
                                                          </div>
                                                        </ValueContainer>
                                                        <IndicatorsContainer
                                                          clearValue={[Function]}
                                                          cx={[Function]}
                                                          getStyles={[Function]}
                                                          getValue={[Function]}
                                                          hasValue={true}
                                                          isDisabled={false}
                                                          isMulti={false}
                                                          isRtl={false}
                                                          options={
                                                            Array [
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_beginning",
                                                                "verboseName": "starts with",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Number",
                                                                "type": "has_number",
                                                                "verboseName": "has a number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 2,
                                                                "type": "has_number_between",
                                                                "verboseName": "has a number between",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lt",
                                                                "verboseName": "has a number below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_lte",
                                                                "verboseName": "has a number at or below",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_eq",
                                                                "verboseName": "has a number equal to",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gte",
                                                                "verboseName": "has a number at or above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_number_gt",
                                                                "verboseName": "has a number above",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Phone",
                                                                "type": "has_phone",
                                                                "verboseName": "has a phone number",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Not Empty",
                                                                "type": "has_value",
                                                                "verboseName": "is not empty",
                                                              },
                                                              Object {
                                                                "additionalArguments": 0,
                                                                "categoryName": "Has Attachment",
                                                                "initialArgument": "@input.attachments",
                                                                "type": "has_attachment",
                                                                "verboseName": "has an attachment",
                                                              },
                                                              Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_pattern",
                                                                "verboseName": "matches regex",
                                                              },
                                                            ]
                                                          }
                                                          selectOption={[Function]}
                                                          selectProps={
                                                            Object {
                                                              "backspaceRemovesValue": true,
                                                              "blurInputOnSelect": true,
                                                              "captureMenuScroll": false,
                                                              "className": "select-base",
                                                              "closeMenuOnScroll": false,
                                                              "closeMenuOnSelect": true,
                                                              "components": Object {},
                                                              "controlShouldRenderValue": true,
                                                              "data-spec": "operator-list",
                                                              "defaultInputValue": "",
                                                              "defaultMenuIsOpen": false,
                                                              "defaultValue": null,
                                                              "escapeClearsValue": false,
                                                              "filterOption": [Function],
                                                              "formatGroupLabel": [Function],
                                                              "getOptionLabel": [Function],
                                                              "getOptionValue": [Function],
                                                              "inputValue": "",
                                                              "isClearable": false,
                                                              "isDisabled": false,
                                                              "isLoading": false,
                                                              "isMulti": false,
                                                              "isOptionDisabled": [Function],
                                                              "isRtl": false,
                                                              "isSearchable": false,
                                                              "loadingMessage": [Function],
                                                              "maxMenuHeight": 300,
                                                              "menuIsOpen": false,
                                                              "menuPlacement": "auto",
                                                              "menuPosition": "absolute",
                                                              "menuShouldBlockScroll": false,
                                                              "menuShouldScrollIntoView": true,
                                                              "minMenuHeight": 140,
                                                              "name": "operator",
                                                              "noOptionsMessage": [Function],
                                                              "onChange": [Function],
                                                              "onInputChange": [Function],
                                                              "onMenuClose": [Function],
                                                              "onMenuOpen": [Function],
                                                              "openMenuOnClick": true,
                                                              "openMenuOnFocus": false,
                                                              "options": Array [
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_beginning",
                                                                  "verboseName": "starts with",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Number",
                                                                  "type": "has_number",
                                                                  "verboseName": "has a number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 2,
                                                                  "type": "has_number_between",
                                                                  "verboseName": "has a number between",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lt",
                                                                  "verboseName": "has a number below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_lte",
                                                                  "verboseName": "has a number at or below",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_eq",
                                                                  "verboseName": "has a number equal to",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gte",
                                                                  "verboseName": "has a number at or above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_number_gt",
                                                                  "verboseName": "has a number above",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Phone",
                                                                  "type": "has_phone",
                                                                  "verboseName": "has a phone number",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Not Empty",
                                                                  "type": "has_value",
                                                                  "verboseName": "is not empty",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 0,
                                                                  "categoryName": "Has Attachment",
                                                                  "initialArgument": "@input.attachments",
                                                                  "type": "has_attachment",
                                                                  "verboseName": "has an attachment",
                                                                },
                                                                Object {
                                                                  "additionalArguments": 1,
                                                                  "type": "has_pattern",
                                                                  "verboseName": "matches regex",
                                                                },
                                                              ],
                                                              "pageSize": 5,
                                                              "placeholder": "Select...",
                                                              "screenReaderStatus": [Function],
                                                              "styles": Object {
                                                                "control": [Function],
                                                                "indicatorsContainer": [Function],
                                                                "input": [Function],
                                                                "menuList": [Function],
                                                                "option": [Function],
                                                                "singleValue": [Function],
                                                                "valueContainer": [Function],
                                                              },
                                                              "tabIndex": "0",
                                                              "tabSelectsValue": true,
                                                              "value": Object {
                                                                "additionalArguments": 1,
                                                                "type": "has_any_word",
                                                                "verboseName": "has any of the words",
                                                                "visibility": Array [
                                                                  "messaging",
                                                                  "messaging_offline",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          setValue={[Function]}
                                                          theme={
                                                            Object {
                                                              "borderRadius": 4,
                                                              "colors": Object {
                                                                "danger": "#DE350B",
                                                                "dangerLight": "#FFBDAD",
                                                                "neutral0": "hsl(0, 0%, 100%)",
                                                                "neutral10": "hsl(0, 0%, 90%)",
                                                                "neutral20": "hsl(0, 0%, 80%)",
                                                                "neutral30": "hsl(0, 0%, 70%)",
                                                                "neutral40": "hsl(0, 0%, 60%)",
                                                                "neutral5": "hsl(0, 0%, 95%)",
                                                                "neutral50": "hsl(0, 0%, 50%)",
                                                                "neutral60": "hsl(0, 0%, 40%)",
                                                                "neutral70": "hsl(0, 0%, 30%)",
                                                                "neutral80": "hsl(0, 0%, 20%)",
                                                                "neutral90": "hsl(0, 0%, 10%)",
                                                                "primary": "#2684FF",
                                                                "primary25": "#DEEBFF",
                                                                "primary50": "#B2D4FF",
                                                                "primary75": "#4C9AFF",
                                                              },
                                                              "spacing": Object {
                                                                "baseUnit": 4,
                                                                "controlHeight": 38,
                                                                "menuGutter": 8,
                                                              },
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="css-1l76mts"
                                                          >
                                                            <IndicatorSeparator
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              isDisabled={false}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="css-d8oujb"
                                                              />
                                                            </IndicatorSeparator>
                                                            <DropdownIndicator
                                                              clearValue={[Function]}
                                                              cx={[Function]}
                                                              getStyles={[Function]}
                                                              getValue={[Function]}
                                                              hasValue={true}
                                                              innerProps={
                                                                Object {
                                                                  "aria-hidden": "true",
                                                                  "onMouseDown": [Function],
                                                                  "onTouchEnd": [Function],
                                                                }
                                                              }
                                                              isDisabled={false}
                                                              isFocused={false}
                                                              isMulti={false}
                                                              isRtl={false}
                                                              options={
                                                                Array [
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_beginning",
                                                                    "verboseName": "starts with",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Number",
                                                                    "type": "has_number",
                                                                    "verboseName": "has a number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 2,
                                                                    "type": "has_number_between",
                                                                    "verboseName": "has a number between",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lt",
                                                                    "verboseName": "has a number below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_lte",
                                                                    "verboseName": "has a number at or below",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_eq",
                                                                    "verboseName": "has a number equal to",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gte",
                                                                    "verboseName": "has a number at or above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_number_gt",
                                                                    "verboseName": "has a number above",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Phone",
                                                                    "type": "has_phone",
                                                                    "verboseName": "has a phone number",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Not Empty",
                                                                    "type": "has_value",
                                                                    "verboseName": "is not empty",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 0,
                                                                    "categoryName": "Has Attachment",
                                                                    "initialArgument": "@input.attachments",
                                                                    "type": "has_attachment",
                                                                    "verboseName": "has an attachment",
                                                                  },
                                                                  Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_pattern",
                                                                    "verboseName": "matches regex",
                                                                  },
                                                                ]
                                                              }
                                                              selectOption={[Function]}
                                                              selectProps={
                                                                Object {
                                                                  "backspaceRemovesValue": true,
                                                                  "blurInputOnSelect": true,
                                                                  "captureMenuScroll": false,
                                                                  "className": "select-base",
                                                                  "closeMenuOnScroll": false,
                                                                  "closeMenuOnSelect": true,
                                                                  "components": Object {},
                                                                  "controlShouldRenderValue": true,
                                                                  "data-spec": "operator-list",
                                                                  "defaultInputValue": "",
                                                                  "defaultMenuIsOpen": false,
                                                                  "defaultValue": null,
                                                                  "escapeClearsValue": false,
                                                                  "filterOption": [Function],
                                                                  "formatGroupLabel": [Function],
                                                                  "getOptionLabel": [Function],
                                                                  "getOptionValue": [Function],
                                                                  "inputValue": "",
                                                                  "isClearable": false,
                                                                  "isDisabled": false,
                                                                  "isLoading": false,
                                                                  "isMulti": false,
                                                                  "isOptionDisabled": [Function],
                                                                  "isRtl": false,
                                                                  "isSearchable": false,
                                                                  "loadingMessage": [Function],
                                                                  "maxMenuHeight": 300,
                                                                  "menuIsOpen": false,
                                                                  "menuPlacement": "auto",
                                                                  "menuPosition": "absolute",
                                                                  "menuShouldBlockScroll": false,
                                                                  "menuShouldScrollIntoView": true,
                                                                  "minMenuHeight": 140,
                                                                  "name": "operator",
                                                                  "noOptionsMessage": [Function],
                                                                  "onChange": [Function],
                                                                  "onInputChange": [Function],
                                                                  "onMenuClose": [Function],
                                                                  "onMenuOpen": [Function],
                                                                  "openMenuOnClick": true,
                                                                  "openMenuOnFocus": false,
                                                                  "options": Array [
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_beginning",
                                                                      "verboseName": "starts with",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Number",
                                                                      "type": "has_number",
                                                                      "verboseName": "has a number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 2,
                                                                      "type": "has_number_between",
                                                                      "verboseName": "has a number between",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lt",
                                                                      "verboseName": "has a number below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_lte",
                                                                      "verboseName": "has a number at or below",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_eq",
                                                                      "verboseName": "has a number equal to",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gte",
                                                                      "verboseName": "has a number at or above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_number_gt",
                                                                      "verboseName": "has a number above",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Phone",
                                                                      "type": "has_phone",
                                                                      "verboseName": "has a phone number",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Not Empty",
                                                                      "type": "has_value",
                                                                      "verboseName": "is not empty",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 0,
                                                                      "categoryName": "Has Attachment",
                                                                      "initialArgument": "@input.attachments",
                                                                      "type": "has_attachment",
                                                                      "verboseName": "has an attachment",
                                                                    },
                                                                    Object {
                                                                      "additionalArguments": 1,
                                                                      "type": "has_pattern",
                                                                      "verboseName": "matches regex",
                                                                    },
                                                                  ],
                                                                  "pageSize": 5,
                                                                  "placeholder": "Select...",
                                                                  "screenReaderStatus": [Function],
                                                                  "styles": Object {
                                                                    "control": [Function],
                                                                    "indicatorsContainer": [Function],
                                                                    "input": [Function],
                                                                    "menuList": [Function],
                                                                    "option": [Function],
                                                                    "singleValue": [Function],
                                                                    "valueContainer": [Function],
                                                                  },
                                                                  "tabIndex": "0",
                                                                  "tabSelectsValue": true,
                                                                  "value": Object {
                                                                    "additionalArguments": 1,
                                                                    "type": "has_any_word",
                                                                    "verboseName": "has any of the words",
                                                                    "visibility": Array [
                                                                      "messaging",
                                                                      "messaging_offline",
                                                                    ],
                                                                  },
                                                                }
                                                              }
                                                              setValue={[Function]}
                                                              theme={
                                                                Object {
                                                                  "borderRadius": 4,
                                                                  "colors": Object {
                                                                    "danger": "#DE350B",
                                                                    "dangerLight": "#FFBDAD",
                                                                    "neutral0": "hsl(0, 0%, 100%)",
                                                                    "neutral10": "hsl(0, 0%, 90%)",
                                                                    "neutral20": "hsl(0, 0%, 80%)",
                                                                    "neutral30": "hsl(0, 0%, 70%)",
                                                                    "neutral40": "hsl(0, 0%, 60%)",
                                                                    "neutral5": "hsl(0, 0%, 95%)",
                                                                    "neutral50": "hsl(0, 0%, 50%)",
                                                                    "neutral60": "hsl(0, 0%, 40%)",
                                                                    "neutral70": "hsl(0, 0%, 30%)",
                                                                    "neutral80": "hsl(0, 0%, 20%)",
                                                                    "neutral90": "hsl(0, 0%, 10%)",
                                                                    "primary": "#2684FF",
                                                                    "primary25": "#DEEBFF",
                                                                    "primary50": "#B2D4FF",
                                                                    "primary75": "#4C9AFF",
                                                                  },
                                                                  "spacing": Object {
                                                                    "baseUnit": 4,
                                                                    "controlHeight": 38,
                                                                    "menuGutter": 8,
                                                                  },
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                aria-hidden="true"
                                                                className="css-1ep9fjw"
                                                                onMouseDown={[Function]}
                                                                onTouchEnd={[Function]}
                                                              >
                                                                <DownChevron>
                                                                  <Svg
                                                                    size={20}
                                                                  >
                                                                    <svg
                                                                      aria-hidden="true"
                                                                      className="css-19bqh2r"
                                                                      focusable="false"
                                                                      height={20}
                                                                      viewBox="0 0 20 20"
                                                                      width={20}
                                                                    >
                                                                      <path
                                                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                                                      />
                                                                    </svg>
                                                                  </Svg>
                                                                </DownChevron>
                                                              </div>
                                                            </DropdownIndicator>
                                                          </div>
                                                        </IndicatorsContainer>
                                                      </div>
                                                    </Control>
                                                    <input
                                                      name="operator"
                                                      type="hidden"
                                                      value="has_any_word"
                                                    />
                                                  </div>
                                                </SelectContainer>
                                              </Select>
                                            </StateManager>
                                          </div>
                                          <div
                                            className="singleOperand"
                                          >
                                            <Connect(TextInputElement)
                                              autocomplete={true}
                                              data-spec="args-input"
                                              entry={
                                                Object {
                                                  "persistantFailures": Array [],
                                                  "value": "",
                                                }
                                              }
                                              name="arguments"
                                              onChange={[Function]}
                                              onFieldFailures={[Function]}
                                            >
                                              <TextInputElement
                                                assetStore={Object {}}
                                                autocomplete={true}
                                                data-spec="args-input"
                                                dispatch={[Function]}
                                                entry={
                                                  Object {
                                                    "persistantFailures": Array [],
                                                    "value": "",
                                                  }
                                                }
                                                name="arguments"
                                                onChange={[Function]}
                                                onFieldFailures={[Function]}
                                                typeConfig={null}
                                              >
                                                <FormElement
                                                  entry={
                                                    Object {
                                                      "persistantFailures": Array [],
                                                      "value": "",
                                                    }
                                                  }
                                                  name="arguments"
                                                  sendMsgError={false}
                                                >
                                                  <div
                                                    className="ele"
                                                  >
                                                    <div
                                                      className="wrapper"
                                                    >
                                                      <input
                                                        className="textinput"
                                                        data-spec="input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        type="text"
                                                        value=""
                                                      />
                                                      <div
                                                        className="completionContainer hidden"
                                                        data-spec="completion-options"
                                                        style={
                                                          Object {
                                                            "left": 0,
                                                            "top": 0,
                                                          }
                                                        }
                                                      >
                                                        <ul
                                                          className="option_list"
                                                          data-spec="completion-list"
                                                        />
                                                        <div
                                                          className="help"
                                                          data-spec="completion-help"
                                                        >
                                                          Tab to complete, enter to select
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </FormElement>
                                              </TextInputElement>
                                            </Connect(TextInputElement)>
                                          </div>
                                          <div
                                            className="categorizeAs"
                                          >
                                            categorize as
                                          </div>
                                          <div
                                            className="category"
                                          >
                                            <Connect(TextInputElement)
                                              data-spec="exit-input"
                                              entry={
                                                Object {
                                                  "value": "",
                                                }
                                              }
                                              name="exitName"
                                              onChange={[Function]}
                                              showInvalid={false}
                                            >
                                              <TextInputElement
                                                assetStore={Object {}}
                                                data-spec="exit-input"
                                                dispatch={[Function]}
                                                entry={
                                                  Object {
                                                    "value": "",
                                                  }
                                                }
                                                name="exitName"
                                                onChange={[Function]}
                                                showInvalid={false}
                                                typeConfig={null}
                                              >
                                                <FormElement
                                                  entry={
                                                    Object {
                                                      "value": "",
                                                    }
                                                  }
                                                  name="exitName"
                                                  sendMsgError={false}
                                                >
                                                  <div
                                                    className="ele"
                                                  >
                                                    <div
                                                      className="wrapper"
                                                    >
                                                      <input
                                                        className="textinput"
                                                        data-spec="input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        type="text"
                                                        value=""
                                                      />
                                                      <div
                                                        className="completionContainer hidden"
                                                        data-spec="completion-options"
                                                        style={
                                                          Object {
                                                            "left": 0,
                                                            "top": 0,
                                                          }
                                                        }
                                                      >
                                                        <ul
                                                          className="option_list"
                                                          data-spec="completion-list"
                                                        />
                                                        <div
                                                          className="help"
                                                          data-spec="completion-help"
                                                        >
                                                          Tab to complete, enter to select
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </div>
                                                </FormElement>
                                              </TextInputElement>
                                            </Connect(TextInputElement)>
                                          </div>
                                          <span
                                            className="fe-x removeIcon"
                                            onClick={[Function]}
                                          />
                                        </div>
                                      </div>
                                    </FormElement>
                                  </CaseElement>
                                </div>
                              </div>
                            </DragHandle>
                          </Motion>
                        </Movable>
                      </DraggableDimensionPublisher>
                    </Connect(DraggableDimensionPublisher)>
                  </Draggable>
                </Connect(Draggable)>
              </div>
            </DroppableDimensionPublisher>
          </Connect(DroppableDimensionPublisher)>
        </Droppable>
      </Connect(Droppable)>
    </DragDropContext>
  </div>
</CaseList>
`;

exports[`CaseList updates should allow reordering 1`] = `
Object {
  "currentCases": Array [
    Object {
      "categoryName": "Green",
      "kase": Object {
        "arguments": Array [
          "Green, g",
        ],
        "category_uuid": "38c1m4g4-b424-585d-8cgi-384d6260ymca",
        "type": "has_any_word",
        "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
      },
      "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
      "valid": true,
    },
    Object {
      "categoryName": "Red",
      "kase": Object {
        "arguments": Array [
          "Red, r",
        ],
        "category_uuid": "38c1m4g4-b424-585d-8cgi-384d6260ymca",
        "type": "has_any_word",
        "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
      },
      "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
      "valid": true,
    },
    Object {
      "categoryName": "",
      "kase": Object {
        "arguments": Array [
          "",
        ],
        "category_uuid": null,
        "type": "has_any_word",
        "uuid": "763e4844-3e1b-407a-a1b5-5fdfcd308b41",
      },
      "uuid": "763e4844-3e1b-407a-a1b5-5fdfcd308b41",
      "valid": true,
    },
  ],
  "valid": true,
}
`;

exports[`CaseList updates should remove cases 1`] = `
Object {
  "currentCases": Array [
    Object {
      "categoryName": "Green",
      "kase": Object {
        "arguments": Array [
          "Green, g",
        ],
        "category_uuid": "38c1m4g4-b424-585d-8cgi-384d6260ymca",
        "type": "has_any_word",
        "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
      },
      "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
      "valid": true,
    },
    Object {
      "categoryName": "",
      "kase": Object {
        "arguments": Array [
          "",
        ],
        "category_uuid": null,
        "type": "has_any_word",
        "uuid": "763e4844-3e1b-407a-a1b5-5fdfcd308b41",
      },
      "uuid": "763e4844-3e1b-407a-a1b5-5fdfcd308b41",
      "valid": true,
    },
  ],
  "valid": true,
}
`;

exports[`CaseList updates should update cases 1`] = `
Object {
  "currentCases": Array [
    Object {
      "categoryName": "Updated Exit Name",
      "kase": Object {
        "arguments": Array [
          "Red, r",
        ],
        "category_uuid": "38c1m4g4-b424-585d-8cgi-384d6260ymca",
        "type": "has_any_word",
        "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
      },
      "uuid": "b1f332f3-bdd3-4891-aec5-1843a712dbf1",
      "valid": true,
    },
    Object {
      "categoryName": "Green",
      "kase": Object {
        "arguments": Array [
          "Green, g",
        ],
        "category_uuid": "38c1m4g4-b424-585d-8cgi-384d6260ymca",
        "type": "has_any_word",
        "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
      },
      "uuid": "061fc171-8b79-4636-b892-bd0ea5aa9b42",
      "valid": true,
    },
    Object {
      "categoryName": "",
      "kase": Object {
        "arguments": Array [
          "",
        ],
        "category_uuid": null,
        "type": "has_any_word",
        "uuid": "763e4844-3e1b-407a-a1b5-5fdfcd308b41",
      },
      "uuid": "763e4844-3e1b-407a-a1b5-5fdfcd308b41",
      "valid": true,
    },
  ],
  "valid": true,
}
`;
